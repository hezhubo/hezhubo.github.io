<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hezb&#39;s blog</title>
  
  <subtitle>android程序猿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hezhubo.github.io/"/>
  <updated>2022-06-02T08:10:48.924Z</updated>
  <id>http://hezhubo.github.io/</id>
  
  <author>
    <name>Hezb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>媒体播放器之IjkPlayer</title>
    <link href="http://hezhubo.github.io/2022/06/02/%E5%AA%92%E4%BD%93%E6%92%AD%E6%94%BE%E5%99%A8%E4%B9%8BIjkPlayer/"/>
    <id>http://hezhubo.github.io/2022/06/02/媒体播放器之IjkPlayer/</id>
    <published>2022-06-02T03:32:42.000Z</published>
    <updated>2022-06-02T08:10:48.924Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>GitHub地址：<a href="https://github.com/bilibili/ijkplayer">https://github.com/bilibili/ijkplayer</a></p></blockquote><h3 id="接入-x2F-使用流程"><a href="#接入-x2F-使用流程" class="headerlink" title="接入&#x2F;使用流程"></a>接入&#x2F;使用流程</h3><ul><li><p>Gradle 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter() // 此仓库GG了</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    # required, enough for most devices.</span><br><span class="line">    compile &#x27;tv.danmaku.ijk.media:ijkplayer-java:0.8.8&#x27;</span><br><span class="line">    compile &#x27;tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8&#x27;</span><br><span class="line"></span><br><span class="line">    # Other ABIs: optional</span><br><span class="line">    compile &#x27;tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8&#x27;</span><br><span class="line">    compile &#x27;tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8&#x27;</span><br><span class="line">    compile &#x27;tv.danmaku.ijk.media:ijkplayer-x86:0.8.8&#x27;</span><br><span class="line">    compile &#x27;tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8&#x27;</span><br><span class="line"></span><br><span class="line">    # ExoPlayer as IMediaPlayer: optional, experimental</span><br><span class="line">    compile &#x27;tv.danmaku.ijk.media:ijkplayer-exo:0.8.8&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编译底层库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装git、yasm</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置环境变量</span></span><br><span class="line">export ANDROID_SDK=&lt;your sdk path&gt;</span><br><span class="line">export ANDROID_NDK=&lt;your ndk path&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置ffmpeg编译配置</span></span><br><span class="line">cd config</span><br><span class="line">rm module.sh</span><br><span class="line">ln -s module-default.sh module.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行安卓初始化脚本</span></span><br><span class="line">cd ..</span><br><span class="line">./init-android.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行编译ffmpeg</span></span><br><span class="line">cd android/contrib</span><br><span class="line">./compile-ffmpeg.sh clean</span><br><span class="line">./compile-ffmpeg.sh all</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行编译ijk so库</span></span><br><span class="line">cd ..</span><br><span class="line">./compile-ijk.sh all</span><br></pre></td></tr></table></figure></li><li><p>基础调用：我们可以看到IjkMediaPlayer几乎和android的MediaPlayer结构类似，可以参照MediaPlayer的调用方式</p></li></ul><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><img src="/2022/06/02/%E5%AA%92%E4%BD%93%E6%92%AD%E6%94%BE%E5%99%A8%E4%B9%8BIjkPlayer/ijkplayer_dir.png" class="" title="ijkplayer_dir"><img src="/2022/06/02/%E5%AA%92%E4%BD%93%E6%92%AD%E6%94%BE%E5%99%A8%E4%B9%8BIjkPlayer/ijkplayer_src.png" class="" title="ijkplayer_src"><h3 id="播放器配置"><a href="#播放器配置" class="headerlink" title="播放器配置"></a>播放器配置</h3><p>在IjkMediaPlayer中，可以通过setOption(int category, String name, String value)方法来设置一些播放器的配置，其中category的取值如下：</p><ul><li>OPT_CATEGORY_FORMAT &#x3D; 1 &#x2F;&#x2F; ffmpeg avformat库下各协议支持的配置</li><li>OPT_CATEGORY_CODEC &#x3D; 2  &#x2F;&#x2F; ffmpeg avcodec库下各编解码支持的配置</li><li>OPT_CATEGORY_SWS &#x3D; 3    &#x2F;&#x2F; ffmpeg swscale库下支持的配置</li><li>OPT_CATEGORY_PLAYER &#x3D; 4 &#x2F;&#x2F; ijk播放器的配置</li></ul><p>例如：我们可以设置一下rtmp协议的配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IjkMediaPlayer.setOption(IjkMediaPlayer.OPT_CATEGORY_FORMAT, <span class="string">&quot;rtmp_pageurl&quot;</span>, <span class="string">&quot;xxx&quot;</span>)</span><br></pre></td></tr></table></figure><p>具体支持的配置项，我们可以通过翻阅源码(<a href="https://github.com/FFmpeg/FFmpeg/blob/master/libavformat/librtmp.c">libavformat&#x2F;librtmp.c</a>)查看：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">const</span> AVOption options[] = &#123;</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_app&quot;</span>, <span class="string">&quot;Name of application to connect to on the RTMP server&quot;</span>, OFFSET(app), AV_OPT_TYPE_STRING, &#123;.str = <span class="literal">NULL</span> &#125;, <span class="number">0</span>, <span class="number">0</span>, DEC|ENC&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_buffer&quot;</span>, <span class="string">&quot;Set buffer time in milliseconds. The default is 3000.&quot;</span>, OFFSET(client_buffer_time), AV_OPT_TYPE_STRING, &#123;.str = <span class="string">&quot;3000&quot;</span>&#125;, <span class="number">0</span>, <span class="number">0</span>, DEC|ENC&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_conn&quot;</span>, <span class="string">&quot;Append arbitrary AMF data to the Connect message&quot;</span>, OFFSET(conn), AV_OPT_TYPE_STRING, &#123;.str = <span class="literal">NULL</span> &#125;, <span class="number">0</span>, <span class="number">0</span>, DEC|ENC&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_flashver&quot;</span>, <span class="string">&quot;Version of the Flash plugin used to run the SWF player.&quot;</span>, OFFSET(flashver), AV_OPT_TYPE_STRING, &#123;.str = <span class="literal">NULL</span> &#125;, <span class="number">0</span>, <span class="number">0</span>, DEC|ENC&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_live&quot;</span>, <span class="string">&quot;Specify that the media is a live stream.&quot;</span>, OFFSET(live), AV_OPT_TYPE_INT, &#123;.i64 = <span class="number">0</span>&#125;, INT_MIN, INT_MAX, DEC, <span class="string">&quot;rtmp_live&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;any&quot;</span>, <span class="string">&quot;both&quot;</span>, <span class="number">0</span>, AV_OPT_TYPE_CONST, &#123;.i64 = <span class="number">-2</span>&#125;, <span class="number">0</span>, <span class="number">0</span>, DEC, <span class="string">&quot;rtmp_live&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;live&quot;</span>, <span class="string">&quot;live stream&quot;</span>, <span class="number">0</span>, AV_OPT_TYPE_CONST, &#123;.i64 = <span class="number">-1</span>&#125;, <span class="number">0</span>, <span class="number">0</span>, DEC, <span class="string">&quot;rtmp_live&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;recorded&quot;</span>, <span class="string">&quot;recorded stream&quot;</span>, <span class="number">0</span>, AV_OPT_TYPE_CONST, &#123;.i64 = <span class="number">0</span>&#125;, <span class="number">0</span>, <span class="number">0</span>, DEC, <span class="string">&quot;rtmp_live&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_pageurl&quot;</span>, <span class="string">&quot;URL of the web page in which the media was embedded. By default no value will be sent.&quot;</span>, OFFSET(pageurl), AV_OPT_TYPE_STRING, &#123;.str = <span class="literal">NULL</span> &#125;, <span class="number">0</span>, <span class="number">0</span>, DEC&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_playpath&quot;</span>, <span class="string">&quot;Stream identifier to play or to publish&quot;</span>, OFFSET(playpath), AV_OPT_TYPE_STRING, &#123;.str = <span class="literal">NULL</span> &#125;, <span class="number">0</span>, <span class="number">0</span>, DEC|ENC&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_subscribe&quot;</span>, <span class="string">&quot;Name of live stream to subscribe to. Defaults to rtmp_playpath.&quot;</span>, OFFSET(subscribe), AV_OPT_TYPE_STRING, &#123;.str = <span class="literal">NULL</span> &#125;, <span class="number">0</span>, <span class="number">0</span>, DEC&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_swfurl&quot;</span>, <span class="string">&quot;URL of the SWF player. By default no value will be sent&quot;</span>, OFFSET(swfurl), AV_OPT_TYPE_STRING, &#123;.str = <span class="literal">NULL</span> &#125;, <span class="number">0</span>, <span class="number">0</span>, DEC|ENC&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_swfverify&quot;</span>, <span class="string">&quot;URL to player swf file, compute hash/size automatically. (unimplemented)&quot;</span>, OFFSET(swfverify), AV_OPT_TYPE_STRING, &#123;.str = <span class="literal">NULL</span> &#125;, <span class="number">0</span>, <span class="number">0</span>, DEC&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;rtmp_tcurl&quot;</span>, <span class="string">&quot;URL of the target stream. Defaults to proto://host[:port]/app.&quot;</span>, OFFSET(tcurl), AV_OPT_TYPE_STRING, &#123;.str = <span class="literal">NULL</span> &#125;, <span class="number">0</span>, <span class="number">0</span>, DEC|ENC&#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> CONFIG_NETWORK</span></span><br><span class="line">    &#123;<span class="string">&quot;rtmp_buffer_size&quot;</span>, <span class="string">&quot;set buffer size in bytes&quot;</span>, OFFSET(buffer_size), AV_OPT_TYPE_INT, &#123;.i64 = <span class="number">-1</span>&#125;, <span class="number">-1</span>, INT_MAX, DEC|ENC &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    &#123; <span class="literal">NULL</span> &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>例如：我们可以设置一下ijk播放器的配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IjkMediaPlayer.setOption(IjkMediaPlayer.OPT_CATEGORY_PLAYER, <span class="string">&quot;start-on-prepared&quot;</span>, <span class="number">1</span>) <span class="comment">// 预处理完立马播放</span></span><br></pre></td></tr></table></figure><p>具体支持的配置项，我们可以通过翻阅源码(<a href="https://github.com/Bilibili/ijkplayer/blob/master/ijkmedia/ijkplayer/ff_ffplay_options.h">ijkmedia&#x2F;ijkplayer&#x2F;ff_ffplay_options.h</a>)查看：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">const</span> AVOption ffp_context_options[] = &#123;</span><br><span class="line">    <span class="comment">// original options in ffplay.c</span></span><br><span class="line">    <span class="comment">// FFP_MERGE: x, y, s, fs</span></span><br><span class="line">    &#123; <span class="string">&quot;an&quot;</span>,                             <span class="string">&quot;disable audio&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(audio_disable),   OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;vn&quot;</span>,                             <span class="string">&quot;disable video&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(video_disable),   OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    <span class="comment">// FFP_MERGE: sn, ast, vst, sst</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> ss</span></span><br><span class="line">    &#123; <span class="string">&quot;nodisp&quot;</span>,                         <span class="string">&quot;disable graphical display&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(display_disable), OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;volume&quot;</span>,                         <span class="string">&quot;set startup volume 0=min 100=max&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(startup_volume),   OPTION_INT(<span class="number">100</span>, <span class="number">0</span>, <span class="number">100</span>) &#125;,</span><br><span class="line">    <span class="comment">// FFP_MERGE: f, pix_fmt, stats</span></span><br><span class="line">    &#123; <span class="string">&quot;fast&quot;</span>,                           <span class="string">&quot;non spec compliant optimizations&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(fast),            OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    <span class="comment">// FFP_MERGE: genpts, drp, lowres, sync, autoexit, exitonkeydown, exitonmousedown</span></span><br><span class="line">    &#123; <span class="string">&quot;loop&quot;</span>,                           <span class="string">&quot;set number of times the playback shall be looped&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(loop),            OPTION_INT(<span class="number">1</span>, INT_MIN, INT_MAX) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;infbuf&quot;</span>,                         <span class="string">&quot;don&#x27;t limit the input buffer size (useful with realtime streams)&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(infinite_buffer), OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;framedrop&quot;</span>,                      <span class="string">&quot;drop frames when cpu is too slow&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(framedrop),       OPTION_INT(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">120</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;seek-at-start&quot;</span>,                  <span class="string">&quot;set offset of player should be seeked&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(seek_at_start),       OPTION_INT64(<span class="number">0</span>, <span class="number">0</span>, INT_MAX) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;subtitle&quot;</span>,                       <span class="string">&quot;decode subtitle stream&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(subtitle),        OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    <span class="comment">// FFP_MERGE: window_title</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> CONFIG_AVFILTER</span></span><br><span class="line">    &#123; <span class="string">&quot;af&quot;</span>,                             <span class="string">&quot;audio filters&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(afilters),        OPTION_STR(<span class="literal">NULL</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;vf0&quot;</span>,                            <span class="string">&quot;video filters 0&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(vfilter0),        OPTION_STR(<span class="literal">NULL</span>) &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    &#123; <span class="string">&quot;rdftspeed&quot;</span>,                      <span class="string">&quot;rdft speed, in msecs&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(rdftspeed),       OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, INT_MAX) &#125;,</span><br><span class="line">    <span class="comment">// FFP_MERGE: showmode, default, i, codec, acodec, scodec, vcodec</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> autorotate</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="string">&quot;find_stream_info&quot;</span>,               <span class="string">&quot;read and decode the streams to fill missing information with heuristics&quot;</span> ,</span><br><span class="line">        OPTION_OFFSET(find_stream_info),    OPTION_INT(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// extended options in ff_ffplay.c</span></span><br><span class="line">    &#123; <span class="string">&quot;max-fps&quot;</span>,                        <span class="string">&quot;drop frames in video whose fps is greater than max-fps&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(max_fps),         OPTION_INT(<span class="number">31</span>, <span class="number">-1</span>, <span class="number">121</span>) &#125;,</span><br><span class="line"></span><br><span class="line">    &#123; <span class="string">&quot;overlay-format&quot;</span>,                 <span class="string">&quot;fourcc of overlay format&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(overlay_format),  OPTION_INT(SDL_FCC_RV32, INT_MIN, INT_MAX),</span><br><span class="line">        .unit = <span class="string">&quot;overlay-format&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;fcc-_es2&quot;</span>,                       <span class="string">&quot;&quot;</span>, <span class="number">0</span>, OPTION_CONST(SDL_FCC__GLES2), .unit = <span class="string">&quot;overlay-format&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;fcc-i420&quot;</span>,                       <span class="string">&quot;&quot;</span>, <span class="number">0</span>, OPTION_CONST(SDL_FCC_I420), .unit = <span class="string">&quot;overlay-format&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;fcc-yv12&quot;</span>,                       <span class="string">&quot;&quot;</span>, <span class="number">0</span>, OPTION_CONST(SDL_FCC_YV12), .unit = <span class="string">&quot;overlay-format&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;fcc-rv16&quot;</span>,                       <span class="string">&quot;&quot;</span>, <span class="number">0</span>, OPTION_CONST(SDL_FCC_RV16), .unit = <span class="string">&quot;overlay-format&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;fcc-rv24&quot;</span>,                       <span class="string">&quot;&quot;</span>, <span class="number">0</span>, OPTION_CONST(SDL_FCC_RV24), .unit = <span class="string">&quot;overlay-format&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;fcc-rv32&quot;</span>,                       <span class="string">&quot;&quot;</span>, <span class="number">0</span>, OPTION_CONST(SDL_FCC_RV32), .unit = <span class="string">&quot;overlay-format&quot;</span> &#125;,</span><br><span class="line"></span><br><span class="line">    &#123; <span class="string">&quot;start-on-prepared&quot;</span>,                  <span class="string">&quot;automatically start playing on prepared&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(start_on_prepared),   OPTION_INT(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line"></span><br><span class="line">    &#123; <span class="string">&quot;video-pictq-size&quot;</span>,                   <span class="string">&quot;max picture queue frame count&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(pictq_size),          OPTION_INT(VIDEO_PICTURE_QUEUE_SIZE_DEFAULT,</span><br><span class="line">                                                       VIDEO_PICTURE_QUEUE_SIZE_MIN,</span><br><span class="line">                                                       VIDEO_PICTURE_QUEUE_SIZE_MAX) &#125;,</span><br><span class="line"></span><br><span class="line">    &#123; <span class="string">&quot;max-buffer-size&quot;</span>,                    <span class="string">&quot;max buffer size should be pre-read&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(dcc.max_buffer_size), OPTION_INT(MAX_QUEUE_SIZE, <span class="number">0</span>, MAX_QUEUE_SIZE) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;min-frames&quot;</span>,                         <span class="string">&quot;minimal frames to stop pre-reading&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(dcc.min_frames),      OPTION_INT(DEFAULT_MIN_FRAMES, MIN_MIN_FRAMES, MAX_MIN_FRAMES) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;first-high-water-mark-ms&quot;</span>,           <span class="string">&quot;first chance to wakeup read_thread&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(dcc.first_high_water_mark_in_ms),</span><br><span class="line">        OPTION_INT(DEFAULT_FIRST_HIGH_WATER_MARK_IN_MS,</span><br><span class="line">                   DEFAULT_FIRST_HIGH_WATER_MARK_IN_MS,</span><br><span class="line">                   DEFAULT_LAST_HIGH_WATER_MARK_IN_MS) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;next-high-water-mark-ms&quot;</span>,            <span class="string">&quot;second chance to wakeup read_thread&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(dcc.next_high_water_mark_in_ms),</span><br><span class="line">        OPTION_INT(DEFAULT_NEXT_HIGH_WATER_MARK_IN_MS,</span><br><span class="line">                   DEFAULT_FIRST_HIGH_WATER_MARK_IN_MS,</span><br><span class="line">                   DEFAULT_LAST_HIGH_WATER_MARK_IN_MS) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;last-high-water-mark-ms&quot;</span>,            <span class="string">&quot;last chance to wakeup read_thread&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(dcc.last_high_water_mark_in_ms),</span><br><span class="line">        OPTION_INT(DEFAULT_LAST_HIGH_WATER_MARK_IN_MS,</span><br><span class="line">                   DEFAULT_FIRST_HIGH_WATER_MARK_IN_MS,</span><br><span class="line">                   DEFAULT_LAST_HIGH_WATER_MARK_IN_MS) &#125;,</span><br><span class="line"></span><br><span class="line">    &#123; <span class="string">&quot;packet-buffering&quot;</span>,                   <span class="string">&quot;pause output until enough packets have been read after stalling&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(packet_buffering),    OPTION_INT(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;sync-av-start&quot;</span>,                      <span class="string">&quot;synchronise a/v start time&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(sync_av_start),       OPTION_INT(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;iformat&quot;</span>,                            <span class="string">&quot;force format&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(iformat_name),        OPTION_STR(<span class="literal">NULL</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;no-time-adjust&quot;</span>,                     <span class="string">&quot;return player&#x27;s real time from the media stream instead of the adjusted time&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(no_time_adjust),      OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;preset-5-1-center-mix-level&quot;</span>,        <span class="string">&quot;preset center-mix-level for 5.1 channel&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(preset_5_1_center_mix_level), OPTION_DOUBLE(M_SQRT1_2, <span class="number">-32</span>, <span class="number">32</span>) &#125;,</span><br><span class="line"></span><br><span class="line">    &#123; <span class="string">&quot;enable-accurate-seek&quot;</span>,                      <span class="string">&quot;enable accurate seek&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(enable_accurate_seek),       OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;accurate-seek-timeout&quot;</span>,                      <span class="string">&quot;accurate seek timeout&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(accurate_seek_timeout),       OPTION_INT(MAX_ACCURATE_SEEK_TIMEOUT, <span class="number">0</span>, MAX_ACCURATE_SEEK_TIMEOUT) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;skip-calc-frame-rate&quot;</span>,                      <span class="string">&quot;don&#x27;t calculate real frame rate&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(skip_calc_frame_rate),       OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;get-frame-mode&quot;</span>,                      <span class="string">&quot;warning, this option only for get frame&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(get_frame_mode),       OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;async-init-decoder&quot;</span>,                  <span class="string">&quot;async create decoder&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(async_init_decoder),   OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;video-mime-type&quot;</span>,                    <span class="string">&quot;default video mime type&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(video_mime_type),     OPTION_STR(<span class="literal">NULL</span>) &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// iOS only options</span></span><br><span class="line">    &#123; <span class="string">&quot;videotoolbox&quot;</span>,                       <span class="string">&quot;VideoToolbox: enable&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(videotoolbox),        OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;videotoolbox-max-frame-width&quot;</span>,       <span class="string">&quot;VideoToolbox: max width of output frame&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(vtb_max_frame_width), OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, INT_MAX) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;videotoolbox-async&quot;</span>,                 <span class="string">&quot;VideoToolbox: use kVTDecodeFrame_EnableAsynchronousDecompression()&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(vtb_async),           OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;videotoolbox-wait-async&quot;</span>,            <span class="string">&quot;VideoToolbox: call VTDecompressionSessionWaitForAsynchronousFrames()&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(vtb_wait_async),      OPTION_INT(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;videotoolbox-handle-resolution-change&quot;</span>,          <span class="string">&quot;VideoToolbox: handle resolution change automatically&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(vtb_handle_resolution_change),    OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Android only options</span></span><br><span class="line">    &#123; <span class="string">&quot;mediacodec&quot;</span>,                             <span class="string">&quot;MediaCodec: enable H264 (deprecated by &#x27;mediacodec-avc&#x27;)&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_avc),          OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;mediacodec-auto-rotate&quot;</span>,                 <span class="string">&quot;MediaCodec: auto rotate frame depending on meta&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_auto_rotate),  OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;mediacodec-all-videos&quot;</span>,                  <span class="string">&quot;MediaCodec: enable all videos&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_all_videos),   OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;mediacodec-avc&quot;</span>,                         <span class="string">&quot;MediaCodec: enable H264&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_avc),          OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;mediacodec-hevc&quot;</span>,                        <span class="string">&quot;MediaCodec: enable HEVC&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_hevc),         OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;mediacodec-mpeg2&quot;</span>,                       <span class="string">&quot;MediaCodec: enable MPEG2VIDEO&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_mpeg2),        OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;mediacodec-mpeg4&quot;</span>,                       <span class="string">&quot;MediaCodec: enable MPEG4&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_mpeg4),        OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;mediacodec-handle-resolution-change&quot;</span>,                    <span class="string">&quot;MediaCodec: handle resolution change automatically&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_handle_resolution_change),     OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;opensles&quot;</span>,                           <span class="string">&quot;OpenSL ES: enable&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(opensles),            OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;soundtouch&quot;</span>,                           <span class="string">&quot;SoundTouch: enable&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(soundtouch_enable),            OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;mediacodec-sync&quot;</span>,                 <span class="string">&quot;mediacodec: use msg_queue for synchronise&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_sync),           OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;mediacodec-default-name&quot;</span>,          <span class="string">&quot;mediacodec default name&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(mediacodec_default_name),      OPTION_STR(<span class="literal">NULL</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;ijkmeta-delay-init&quot;</span>,          <span class="string">&quot;ijkmeta delay init&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(ijkmeta_delay_init),      OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="string">&quot;render-wait-start&quot;</span>,          <span class="string">&quot;render wait start&quot;</span>,</span><br><span class="line">        OPTION_OFFSET(render_wait_start),      OPTION_INT(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>) &#125;,</span><br><span class="line">    &#123; <span class="literal">NULL</span> &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;GitHub地址：&lt;a href=&quot;https://github.com/bilibili/ijkplayer&quot;&gt;https://github.com/bilibili/ijkplayer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=
      
    
    </summary>
    
      <category term="音视频" scheme="http://hezhubo.github.io/categories/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
    
      <category term="音视频" scheme="http://hezhubo.github.io/tags/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>音视频基础知识</title>
    <link href="http://hezhubo.github.io/2022/06/02/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://hezhubo.github.io/2022/06/02/音视频基础知识/</id>
    <published>2022-06-02T02:42:44.000Z</published>
    <updated>2022-06-02T03:17:01.779Z</updated>
    
    <content type="html"><![CDATA[<h3 id="封装格式"><a href="#封装格式" class="headerlink" title="封装格式"></a>封装格式</h3><ul><li>其中包括：MP4, AVI, FLV, MKV, TS, RMVB…</li><li><a href="https://en.wikipedia.org/wiki/Comparison_of_video_container_formats">封装格式对比</a></li></ul><h3 id="编码格式"><a href="#编码格式" class="headerlink" title="编码格式"></a>编码格式</h3><ul><li>视频编码<ul><li>其中包括：HEVC(H.265), H.264, MPEG4, MPEG2, VP9…</li><li><a href="http://en.wikipedia.org/wiki/Comparison_of_video_codecs">视频编码器对比</a></li></ul></li><li>音频编码<ul><li>其中包括：AAC, MP3, WMA…</li><li><a href="http://en.wikipedia.org/wiki/Comparison_of_audio_formats">音频编码格式对比</a></li></ul></li></ul><h3 id="视频播放器原理"><a href="#视频播放器原理" class="headerlink" title="视频播放器原理"></a>视频播放器原理</h3><blockquote><p>从网络上播放一个视频需要经过四个步骤：解协议，解封装，解码，音视频同步</p></blockquote><img src="/2022/06/02/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/player_procedure.jpg" class="" title="player_procedure"><ul><li>解协议：将流媒体协议的数据，解析为标准的相应的封装格式数据。常见的协议有http、rtmp、rtsp等等</li><li>解封装：将输入的封装格式的数据，分离成为音频流压缩编码数据和视频流压缩编码数据</li><li>解码：将视频&#x2F;音频压缩编码数据，解码成为非压缩的视频&#x2F;音频原始数据。常见的非压缩视频原始（颜色）数据有：YUV420P、RGB等等，非压缩音频原始数据一般为：PCM</li><li>音视频同步：根据解封装模块处理过程中获取的参数信息(时间戳)，同步解码出来的音&#x2F;视频数据，并送至系统显卡和声卡播放</li></ul><h3 id="视频重要参数"><a href="#视频重要参数" class="headerlink" title="视频重要参数"></a>视频重要参数</h3><ul><li>分辨率：图像的尺寸，指一帧图像包含的像素的多少</li><li>码率(Bits Per Second)：指每秒传送的数据位数，常见单位KBPS（千位每秒）和MBPS（兆位每秒）</li><li>帧率(Frames Per Second)：每秒显示的帧数</li><li>帧类型<ul><li>I帧(Intra Picture)：帧内编码帧，俗称关键帧。一般来说I帧不需要依赖前后帧信息，可独立进行解码</li><li>P帧(predictive-frame)：前向预测编码帧。P帧存储的是当前帧画面与前一帧（前一帧可能是I帧也可能是P帧）的差别</li><li>B帧(bi-directional interpolatedprediction frame)：双向预测内插编码帧。B帧非常特殊，它存储的是本帧与前后帧的差别</li></ul></li><li>时间戳<ul><li>DTS(Decoding Time Stamp)：解码时间戳</li><li>PTS(Presentation Time Stamp)：显示时间戳</li></ul></li></ul><hr><p>参考资料：<a href="https://blog.csdn.net/leixiaohua1020/article/details/18893769">【总结】视音频编解码技术零基础学习方法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;封装格式&quot;&gt;&lt;a href=&quot;#封装格式&quot; class=&quot;headerlink&quot; title=&quot;封装格式&quot;&gt;&lt;/a&gt;封装格式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;其中包括：MP4, AVI, FLV, MKV, TS, RMVB…&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;htt
      
    
    </summary>
    
      <category term="音视频" scheme="http://hezhubo.github.io/categories/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
    
      <category term="音视频" scheme="http://hezhubo.github.io/tags/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>android多媒体播放器之VideoView</title>
    <link href="http://hezhubo.github.io/2016/08/28/android-videoview/"/>
    <id>http://hezhubo.github.io/2016/08/28/android-videoview/</id>
    <published>2016-08-28T04:26:39.000Z</published>
    <updated>2022-06-01T06:28:52.493Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在需要播放视频的时候，我们会往往会直接使用VideoView，因为方便，简单几行代码就搞定了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">VideoView videoView; <span class="comment">// 通过xml资源或是使用代码自行创建</span></span><br><span class="line"><span class="type">MediaController</span> <span class="variable">mediaController</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MediaController</span>(<span class="built_in">this</span>); <span class="comment">// 封装了播放控制的一个布局（包含播放/暂停，时长显示，进度条等），this 上下文</span></span><br><span class="line">videoView.setMediaController(mediaController); <span class="comment">// 设置控制器</span></span><br><span class="line">videoView.setVideoPath(<span class="string">&quot;/mnt/sdcard/test.mp4&quot;</span>); <span class="comment">// 视频路径，支持本地文件，http，rtsp协议</span></span><br><span class="line">videoView.start(); <span class="comment">// 开始播放</span></span><br></pre></td></tr></table></figure><p><strong>VideoView其实是SurfaceView+MediaPlayer的封装，下面来分析一下源码的实现。</strong></p></blockquote><h3 id="基于API-23的主要源码分析："><a href="#基于API-23的主要源码分析：" class="headerlink" title="基于API 23的主要源码分析："></a>基于API 23的主要源码分析：</h3><h4 id="结构关系"><a href="#结构关系" class="headerlink" title="结构关系"></a>结构关系</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VideoView</span> <span class="keyword">extends</span> <span class="title class_">SurfaceView</span> <span class="keyword">implements</span> <span class="title class_">MediaPlayerControl</span>, SubtitleController.Anchor &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以看到VideoView继承SurfaceView，实现了两接口：MediaPlayerControl和SubtitleController.Anchor。MediaPlayerControl就是android.widget.MediaController的内部接口，MediaController就是通过这个接口来控制播放器的。至于SubtitleController.Anchor这个接口是和字幕有关的，具体怎么用我暂时不清楚。<br>下面看一下MediaPlayerControl的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MediaPlayerControl</span> &#123;</span><br><span class="line">    <span class="keyword">void</span>    <span class="title function_">start</span><span class="params">()</span>; <span class="comment">// 播放</span></span><br><span class="line">    <span class="keyword">void</span>    <span class="title function_">pause</span><span class="params">()</span>; <span class="comment">// 暂停</span></span><br><span class="line">    <span class="type">int</span>     <span class="title function_">getDuration</span><span class="params">()</span>; <span class="comment">// 获取总时长</span></span><br><span class="line">    <span class="type">int</span>     <span class="title function_">getCurrentPosition</span><span class="params">()</span>; <span class="comment">// 获取当前播放位置</span></span><br><span class="line">    <span class="keyword">void</span>    <span class="title function_">seekTo</span><span class="params">(<span class="type">int</span> pos)</span>; <span class="comment">// 跳转到指定位置</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isPlaying</span><span class="params">()</span>; <span class="comment">// 是否在播放</span></span><br><span class="line">    <span class="type">int</span>     <span class="title function_">getBufferPercentage</span><span class="params">()</span>; <span class="comment">// 获取总缓冲百分比</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">canPause</span><span class="params">()</span>; <span class="comment">// 能否暂停</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">canSeekBackward</span><span class="params">()</span>; <span class="comment">// 能否向后跳转</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">canSeekForward</span><span class="params">()</span>; <span class="comment">// 能否向前跳转</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the audio session id for the player used by this VideoView. This can be used to</span></span><br><span class="line"><span class="comment">     * apply audio effects to the audio track of a video.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> The audio session, or 0 if there was an error.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span>     <span class="title function_">getAudioSessionId</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// settable by the client</span></span><br><span class="line"><span class="keyword">private</span> Uri         mUri; <span class="comment">// 视频的Uri</span></span><br><span class="line"><span class="keyword">private</span> Map&lt;String, String&gt; mHeaders; <span class="comment">// 请求头</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 所有有可能的播放状态</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STATE_ERROR</span>              <span class="operator">=</span> -<span class="number">1</span>; <span class="comment">// 错误</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STATE_IDLE</span>               <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 初始</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STATE_PREPARING</span>          <span class="operator">=</span> <span class="number">1</span>; <span class="comment">// 预处理中</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STATE_PREPARED</span>           <span class="operator">=</span> <span class="number">2</span>; <span class="comment">// 预处理完成</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STATE_PLAYING</span>            <span class="operator">=</span> <span class="number">3</span>; <span class="comment">// 播放中</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STATE_PAUSED</span>             <span class="operator">=</span> <span class="number">4</span>; <span class="comment">// 暂停</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STATE_PLAYBACK_COMPLETED</span> <span class="operator">=</span> <span class="number">5</span>; <span class="comment">// 播放完成</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="variable">mCurrentState</span> <span class="operator">=</span> STATE_IDLE; <span class="comment">// 当前状态</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="variable">mTargetState</span>  <span class="operator">=</span> STATE_IDLE; <span class="comment">// 目标状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// All the stuff we need for playing and showing a video</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">SurfaceHolder</span> <span class="variable">mSurfaceHolder</span> <span class="operator">=</span> <span class="literal">null</span>; <span class="comment">// Surface持有者</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">MediaPlayer</span> <span class="variable">mMediaPlayer</span> <span class="operator">=</span> <span class="literal">null</span>; <span class="comment">// 真正的播放器</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span>         mAudioSession; <span class="comment">// 音频 Session id</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span>         mVideoWidth; <span class="comment">// 视频宽</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span>         mVideoHeight; <span class="comment">// 视频高</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span>         mSurfaceWidth; <span class="comment">// 显示(绘制)宽</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span>         mSurfaceHeight; <span class="comment">// 显示(绘制)高</span></span><br><span class="line"><span class="keyword">private</span> MediaController mMediaController; <span class="comment">// 控制层控制器</span></span><br><span class="line"><span class="keyword">private</span> OnCompletionListener mOnCompletionListener; <span class="comment">// 播放完成监听器</span></span><br><span class="line"><span class="keyword">private</span> MediaPlayer.OnPreparedListener mOnPreparedListener; <span class="comment">// 预处理监听器</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span>         mCurrentBufferPercentage; <span class="comment">// 当前缓冲百分比 </span></span><br><span class="line"><span class="keyword">private</span> OnErrorListener mOnErrorListener; <span class="comment">// 错误监听器</span></span><br><span class="line"><span class="keyword">private</span> OnInfoListener  mOnInfoListener; <span class="comment">// 播放(过程)信息监听器</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span>         mSeekWhenPrepared;  <span class="comment">// 预处理完成跳转位置</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span>     mCanPause; <span class="comment">// 能否暂停</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span>     mCanSeekBack; <span class="comment">// 能否向后跳转</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span>     mCanSeekForward; <span class="comment">// 能否向前跳转</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Subtitle rendering widget overlaid on top of the video. */</span></span><br><span class="line"><span class="keyword">private</span> RenderingWidget mSubtitleWidget; <span class="comment">// 字幕渲染组件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Listener for changes to subtitle data, used to redraw when needed. */</span></span><br><span class="line"><span class="keyword">private</span> RenderingWidget.OnChangedListener mSubtitlesChangedListener;</span><br></pre></td></tr></table></figure><h4 id="初始化方法"><a href="#初始化方法" class="headerlink" title="初始化方法"></a>初始化方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initVideoView</span><span class="params">()</span> &#123;</span><br><span class="line">    mVideoWidth = <span class="number">0</span>;</span><br><span class="line">    mVideoHeight = <span class="number">0</span>;</span><br><span class="line">    getHolder().addCallback(mSHCallback); <span class="comment">// 给Holder添加回调</span></span><br><span class="line">    getHolder().setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS); <span class="comment">// 这个可以不设置</span></span><br><span class="line">    setFocusable(<span class="literal">true</span>); <span class="comment">// 设置可以获取焦点</span></span><br><span class="line">    setFocusableInTouchMode(<span class="literal">true</span>); <span class="comment">// 设置触摸可以获取焦点</span></span><br><span class="line">    requestFocus(); <span class="comment">// 请求焦点</span></span><br><span class="line">    mPendingSubtitleTracks = <span class="keyword">new</span> <span class="title class_">Vector</span>&lt;Pair&lt;InputStream, MediaFormat&gt;&gt;(); <span class="comment">// 字幕相关 字幕轨道表</span></span><br><span class="line">    <span class="comment">// 当前状态与目标状态均为初始状态</span></span><br><span class="line">    mCurrentState = STATE_IDLE;</span><br><span class="line">    mTargetState  = STATE_IDLE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中mSHCallback代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">SurfaceHolder.<span class="type">Callback</span> <span class="variable">mSHCallback</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SurfaceHolder</span>.Callback()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceChanged</span><span class="params">(SurfaceHolder holder, <span class="type">int</span> format,</span></span><br><span class="line"><span class="params">                                <span class="type">int</span> w, <span class="type">int</span> h)</span></span><br><span class="line">    &#123; <span class="comment">// 在surface发生改变时回调此方法</span></span><br><span class="line">        mSurfaceWidth = w; <span class="comment">// 设置surface宽</span></span><br><span class="line">        mSurfaceHeight = h; <span class="comment">// 设置surface高</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isValidState</span> <span class="operator">=</span>  (mTargetState == STATE_PLAYING); <span class="comment">// 若目标状态是播放状态，则记为有效状态</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasValidSize</span> <span class="operator">=</span> (mVideoWidth == w &amp;&amp; mVideoHeight == h); <span class="comment">// 若视频宽高与surface宽高一致，则记为有效尺寸</span></span><br><span class="line">        <span class="keyword">if</span> (mMediaPlayer != <span class="literal">null</span> &amp;&amp; isValidState &amp;&amp; hasValidSize) &#123; <span class="comment">// 播放器可用，并且状态与尺寸均有效，则开始播放</span></span><br><span class="line">            <span class="keyword">if</span> (mSeekWhenPrepared != <span class="number">0</span>) &#123; <span class="comment">// 这是播放前检查是否要跳转</span></span><br><span class="line">                seekTo(mSeekWhenPrepared); <span class="comment">// 跳转到指定位置</span></span><br><span class="line">            &#125;</span><br><span class="line">            start(); <span class="comment">// 开始播放</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceCreated</span><span class="params">(SurfaceHolder holder)</span></span><br><span class="line">    &#123; <span class="comment">// 在surface创建时回调此方法</span></span><br><span class="line">        mSurfaceHolder = holder;</span><br><span class="line">        openVideo(); <span class="comment">// 打开播放器</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceDestroyed</span><span class="params">(SurfaceHolder holder)</span></span><br><span class="line">    &#123; <span class="comment">// 在surface销毁时回调此方法，一旦销毁就不能再使用</span></span><br><span class="line">        mSurfaceHolder = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (mMediaController != <span class="literal">null</span>) mMediaController.hide(); <span class="comment">// 隐藏控制层</span></span><br><span class="line">        release(<span class="literal">true</span>); <span class="comment">// 释放资源</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="SurfaceView测量部分"><a href="#SurfaceView测量部分" class="headerlink" title="SurfaceView测量部分"></a>SurfaceView测量部分</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onMeasure</span><span class="params">(<span class="type">int</span> widthMeasureSpec, <span class="type">int</span> heightMeasureSpec)</span> &#123; <span class="comment">// 测量宽高</span></span><br><span class="line">    <span class="comment">// 根据视频尺寸和布局宽高计算宽高</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> getDefaultSize(mVideoWidth, widthMeasureSpec);</span><br><span class="line">    <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> getDefaultSize(mVideoHeight, heightMeasureSpec);</span><br><span class="line">    <span class="keyword">if</span> (mVideoWidth &gt; <span class="number">0</span> &amp;&amp; mVideoHeight &gt; <span class="number">0</span>) &#123; <span class="comment">// 当视频宽高可用时</span></span><br><span class="line">        <span class="comment">// 计算布局设定的大小</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">widthSpecMode</span> <span class="operator">=</span> MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">widthSpecSize</span> <span class="operator">=</span> MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">heightSpecMode</span> <span class="operator">=</span> MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">heightSpecSize</span> <span class="operator">=</span> MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下列条件父布局宽高是否限定子布局宽高</span></span><br><span class="line">        <span class="keyword">if</span> (widthSpecMode == MeasureSpec.EXACTLY &amp;&amp; heightSpecMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">            <span class="comment">// the size is fixed</span></span><br><span class="line">            width = widthSpecSize;</span><br><span class="line">            height = heightSpecSize;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// for compatibility, we adjust size based on aspect ratio</span></span><br><span class="line">            <span class="keyword">if</span> ( mVideoWidth * height  &lt; width * mVideoHeight ) &#123;</span><br><span class="line">                <span class="comment">//Log.i(&quot;@@@&quot;, &quot;image too wide, correcting&quot;);</span></span><br><span class="line">                width = height * mVideoWidth / mVideoHeight;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> ( mVideoWidth * height  &gt; width * mVideoHeight ) &#123;</span><br><span class="line">                <span class="comment">//Log.i(&quot;@@@&quot;, &quot;image too tall, correcting&quot;);</span></span><br><span class="line">                height = width * mVideoHeight / mVideoWidth;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (widthSpecMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">            <span class="comment">// only the width is fixed, adjust the height to match aspect ratio if possible</span></span><br><span class="line">            width = widthSpecSize;</span><br><span class="line">            height = width * mVideoHeight / mVideoWidth;</span><br><span class="line">            <span class="keyword">if</span> (heightSpecMode == MeasureSpec.AT_MOST &amp;&amp; height &gt; heightSpecSize) &#123;</span><br><span class="line">                <span class="comment">// couldn&#x27;t match aspect ratio within the constraints</span></span><br><span class="line">                height = heightSpecSize;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (heightSpecMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">            <span class="comment">// only the height is fixed, adjust the width to match aspect ratio if possible</span></span><br><span class="line">            height = heightSpecSize;</span><br><span class="line">            width = height * mVideoWidth / mVideoHeight;</span><br><span class="line">            <span class="keyword">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; width &gt; widthSpecSize) &#123;</span><br><span class="line">                <span class="comment">// couldn&#x27;t match aspect ratio within the constraints</span></span><br><span class="line">                width = widthSpecSize;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// neither the width nor the height are fixed, try to use actual video size</span></span><br><span class="line">            width = mVideoWidth;</span><br><span class="line">            height = mVideoHeight;</span><br><span class="line">            <span class="keyword">if</span> (heightSpecMode == MeasureSpec.AT_MOST &amp;&amp; height &gt; heightSpecSize) &#123;</span><br><span class="line">                <span class="comment">// too tall, decrease both width and height</span></span><br><span class="line">                height = heightSpecSize;</span><br><span class="line">                width = height * mVideoWidth / mVideoHeight;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; width &gt; widthSpecSize) &#123;</span><br><span class="line">                <span class="comment">// too wide, decrease both width and height</span></span><br><span class="line">                width = widthSpecSize;</span><br><span class="line">                height = width * mVideoHeight / mVideoWidth;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// no size yet, just adopt the given spec sizes</span></span><br><span class="line">    &#125;</span><br><span class="line">    setMeasuredDimension(width, height); <span class="comment">// 存储测量的宽高</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="内部监听器"><a href="#内部监听器" class="headerlink" title="内部监听器"></a>内部监听器</h4><h5 id="视频尺寸变化监听器"><a href="#视频尺寸变化监听器" class="headerlink" title="视频尺寸变化监听器"></a>视频尺寸变化监听器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MediaPlayer.<span class="type">OnVideoSizeChangedListener</span> <span class="variable">mSizeChangedListener</span> <span class="operator">=</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnVideoSizeChangedListener() &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onVideoSizeChanged</span><span class="params">(MediaPlayer mp, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">            mVideoWidth = mp.getVideoWidth();</span><br><span class="line">            mVideoHeight = mp.getVideoHeight();</span><br><span class="line">            <span class="keyword">if</span> (mVideoWidth != <span class="number">0</span> &amp;&amp; mVideoHeight != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 设置surface固定尺寸</span></span><br><span class="line">                getHolder().setFixedSize(mVideoWidth, mVideoHeight);</span><br><span class="line">                requestLayout(); <span class="comment">// 请求重新测量布局</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="视频预处理监听器"><a href="#视频预处理监听器" class="headerlink" title="视频预处理监听器"></a>视频预处理监听器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">MediaPlayer.<span class="type">OnPreparedListener</span> <span class="variable">mPreparedListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnPreparedListener() &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPrepared</span><span class="params">(MediaPlayer mp)</span> &#123;</span><br><span class="line">        mCurrentState = STATE_PREPARED; <span class="comment">// 当前状态已预处理完成</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Get the capabilities of the player for this stream</span></span><br><span class="line">        <span class="type">Metadata</span> <span class="variable">data</span> <span class="operator">=</span> mp.getMetadata(MediaPlayer.METADATA_ALL,</span><br><span class="line">                                  MediaPlayer.BYPASS_METADATA_FILTER);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (data != <span class="literal">null</span>) &#123; <span class="comment">// 解析获取的视频信息</span></span><br><span class="line">            mCanPause = !data.has(Metadata.PAUSE_AVAILABLE)</span><br><span class="line">                    || data.getBoolean(Metadata.PAUSE_AVAILABLE);</span><br><span class="line">            mCanSeekBack = !data.has(Metadata.SEEK_BACKWARD_AVAILABLE)</span><br><span class="line">                    || data.getBoolean(Metadata.SEEK_BACKWARD_AVAILABLE);</span><br><span class="line">            mCanSeekForward = !data.has(Metadata.SEEK_FORWARD_AVAILABLE)</span><br><span class="line">                    || data.getBoolean(Metadata.SEEK_FORWARD_AVAILABLE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 视频信息获取失败，下面操作默认都可以</span></span><br><span class="line">            mCanPause = mCanSeekBack = mCanSeekForward = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mOnPreparedListener != <span class="literal">null</span>) &#123;</span><br><span class="line">            mOnPreparedListener.onPrepared(mMediaPlayer); <span class="comment">// 告诉外部的监听器</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mMediaController != <span class="literal">null</span>) &#123;</span><br><span class="line">            mMediaController.setEnabled(<span class="literal">true</span>); <span class="comment">// 当前控制器可用</span></span><br><span class="line">        &#125;</span><br><span class="line">        mVideoWidth = mp.getVideoWidth();</span><br><span class="line">        mVideoHeight = mp.getVideoHeight();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">seekToPosition</span> <span class="operator">=</span> mSeekWhenPrepared;  <span class="comment">// mSeekWhenPrepared may be changed after seekTo() call</span></span><br><span class="line">        <span class="keyword">if</span> (seekToPosition != <span class="number">0</span>) &#123;</span><br><span class="line">            seekTo(seekToPosition); <span class="comment">// 跳转到指定位置</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mVideoWidth != <span class="number">0</span> &amp;&amp; mVideoHeight != <span class="number">0</span>) &#123;</span><br><span class="line">            getHolder().setFixedSize(mVideoWidth, mVideoHeight); <span class="comment">// 设置surface固定尺寸</span></span><br><span class="line">            <span class="keyword">if</span> (mSurfaceWidth == mVideoWidth &amp;&amp; mSurfaceHeight == mVideoHeight) &#123;</span><br><span class="line">                <span class="comment">// We didn&#x27;t actually change the size (it was already at the size</span></span><br><span class="line">                <span class="comment">// we need), so we won&#x27;t get a &quot;surface changed&quot; callback, so</span></span><br><span class="line">                <span class="comment">// start the video here instead of in the callback.</span></span><br><span class="line">                <span class="keyword">if</span> (mTargetState == STATE_PLAYING) &#123; <span class="comment">// 当目标状态为播放状态时</span></span><br><span class="line">                    start(); <span class="comment">// 开始播放</span></span><br><span class="line">                    <span class="keyword">if</span> (mMediaController != <span class="literal">null</span>) &#123;</span><br><span class="line">                        mMediaController.show(); <span class="comment">// 展示控制器UI</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!isPlaying() &amp;&amp;</span><br><span class="line">                           (seekToPosition != <span class="number">0</span> || getCurrentPosition() &gt; <span class="number">0</span>)) &#123;</span><br><span class="line">                   <span class="comment">// 不是在播放状态并且当前进度不为0时，展示控制器UI</span></span><br><span class="line">                   <span class="keyword">if</span> (mMediaController != <span class="literal">null</span>) &#123;</span><br><span class="line">                       <span class="comment">// Show the media controls when we&#x27;re paused into a video and make &#x27;em stick.</span></span><br><span class="line">                       mMediaController.show(<span class="number">0</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// We don&#x27;t know the video size yet, but should start anyway.</span></span><br><span class="line">            <span class="comment">// The video size might be reported to us later.</span></span><br><span class="line">            <span class="keyword">if</span> (mTargetState == STATE_PLAYING) &#123; <span class="comment">// 当目标状态为播放状态时</span></span><br><span class="line">                start(); <span class="comment">// 开始播放</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="视频播放完成监听器"><a href="#视频播放完成监听器" class="headerlink" title="视频播放完成监听器"></a>视频播放完成监听器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> MediaPlayer.<span class="type">OnCompletionListener</span> <span class="variable">mCompletionListener</span> <span class="operator">=</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnCompletionListener() &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompletion</span><span class="params">(MediaPlayer mp)</span> &#123;</span><br><span class="line">        <span class="comment">// 当前状态与目标状态为播放完成状态</span></span><br><span class="line">        mCurrentState = STATE_PLAYBACK_COMPLETED;</span><br><span class="line">        mTargetState = STATE_PLAYBACK_COMPLETED;</span><br><span class="line">        <span class="keyword">if</span> (mMediaController != <span class="literal">null</span>) &#123;</span><br><span class="line">            mMediaController.hide(); <span class="comment">// 隐藏控制层</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mOnCompletionListener != <span class="literal">null</span>) &#123;</span><br><span class="line">            mOnCompletionListener.onCompletion(mMediaPlayer); <span class="comment">// 通知外部的监听器</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="视频播放-过程-信息监听器"><a href="#视频播放-过程-信息监听器" class="headerlink" title="视频播放(过程)信息监听器"></a>视频播放(过程)信息监听器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> MediaPlayer.<span class="type">OnInfoListener</span> <span class="variable">mInfoListener</span> <span class="operator">=</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnInfoListener() &#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="type">boolean</span> <span class="title function_">onInfo</span><span class="params">(MediaPlayer mp, <span class="type">int</span> arg1, <span class="type">int</span> arg2)</span> &#123;</span><br><span class="line">        <span class="comment">// 这里没做任何处理，直接通知外部的监听器</span></span><br><span class="line">        <span class="keyword">if</span> (mOnInfoListener != <span class="literal">null</span>) &#123;</span><br><span class="line">            mOnInfoListener.onInfo(mp, arg1, arg2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="视频播放错误监听器"><a href="#视频播放错误监听器" class="headerlink" title="视频播放错误监听器"></a>视频播放错误监听器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> MediaPlayer.<span class="type">OnErrorListener</span> <span class="variable">mErrorListener</span> <span class="operator">=</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnErrorListener() &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onError</span><span class="params">(MediaPlayer mp, <span class="type">int</span> framework_err, <span class="type">int</span> impl_err)</span> &#123;</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;Error: &quot;</span> + framework_err + <span class="string">&quot;,&quot;</span> + impl_err);</span><br><span class="line">        <span class="comment">// 当前状态与目标状态为错误状态</span></span><br><span class="line">        mCurrentState = STATE_ERROR;</span><br><span class="line">        mTargetState = STATE_ERROR;</span><br><span class="line">        <span class="keyword">if</span> (mMediaController != <span class="literal">null</span>) &#123;</span><br><span class="line">            mMediaController.hide(); <span class="comment">// 隐藏控制层UI</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* If an error handler has been supplied, use it and finish. */</span></span><br><span class="line">        <span class="keyword">if</span> (mOnErrorListener != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mOnErrorListener.onError(mMediaPlayer, framework_err, impl_err)) &#123;</span><br><span class="line">                <span class="comment">// 通知外部的监听器，又外部来处理错误，不往下执行</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Otherwise, pop up an error dialog so the user knows that</span></span><br><span class="line"><span class="comment">         * something bad has happened. Only try and pop up the dialog</span></span><br><span class="line"><span class="comment">         * if we&#x27;re attached to a window. When we&#x27;re going away and no</span></span><br><span class="line"><span class="comment">         * longer have a window, don&#x27;t bother showing the user an error.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (getWindowToken() != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Resources</span> <span class="variable">r</span> <span class="operator">=</span> mContext.getResources();</span><br><span class="line">            <span class="type">int</span> messageId;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (framework_err == MediaPlayer.MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK) &#123;</span><br><span class="line">                messageId = com.android.internal.R.string.VideoView_error_text_invalid_progressive_playback;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                messageId = com.android.internal.R.string.VideoView_error_text_unknown;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(mContext)</span><br><span class="line">                    .setMessage(messageId)</span><br><span class="line">                    .setPositiveButton(com.android.internal.R.string.VideoView_error_button,</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialog, <span class="type">int</span> whichButton)</span> &#123;</span><br><span class="line">                                    <span class="comment">/* If we get here, there is no onError listener, so</span></span><br><span class="line"><span class="comment">                                     * at least inform them that the video is over.</span></span><br><span class="line"><span class="comment">                                     */</span></span><br><span class="line">                                    <span class="keyword">if</span> (mOnCompletionListener != <span class="literal">null</span>) &#123;</span><br><span class="line">                                        mOnCompletionListener.onCompletion(mMediaPlayer);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;)</span><br><span class="line">                    .setCancelable(<span class="literal">false</span>)</span><br><span class="line">                    .show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="视频缓冲监听器"><a href="#视频缓冲监听器" class="headerlink" title="视频缓冲监听器"></a>视频缓冲监听器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> MediaPlayer.<span class="type">OnBufferingUpdateListener</span> <span class="variable">mBufferingUpdateListener</span> <span class="operator">=</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnBufferingUpdateListener() &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBufferingUpdate</span><span class="params">(MediaPlayer mp, <span class="type">int</span> percent)</span> &#123;</span><br><span class="line">        mCurrentBufferPercentage = percent; <span class="comment">// 记录当前缓冲百分比</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="触碰及键盘事件"><a href="#触碰及键盘事件" class="headerlink" title="触碰及键盘事件"></a>触碰及键盘事件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouchEvent</span><span class="params">(MotionEvent ev)</span> &#123;</span><br><span class="line">    <span class="comment">// 触摸事件</span></span><br><span class="line">    <span class="keyword">if</span> (isInPlaybackState() &amp;&amp; mMediaController != <span class="literal">null</span>) &#123; <span class="comment">// 当前状态为可用状态并且控制器存在</span></span><br><span class="line">        toggleMediaControlsVisiblity(); <span class="comment">// 显示/隐藏控制层UI</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTrackballEvent</span><span class="params">(MotionEvent ev)</span> &#123;</span><br><span class="line">    <span class="comment">// 轨迹球事件</span></span><br><span class="line">    <span class="keyword">if</span> (isInPlaybackState() &amp;&amp; mMediaController != <span class="literal">null</span>) &#123; <span class="comment">// 当前状态为可用状态并且控制器存在</span></span><br><span class="line">        toggleMediaControlsVisiblity(); <span class="comment">// 显示/隐藏控制层UI</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否为可用状态</span></span><br><span class="line"><span class="comment"> * 播放器不为空</span></span><br><span class="line"><span class="comment"> * 当前状态不为错误，初始，预处理中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isInPlaybackState</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (mMediaPlayer != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">            mCurrentState != STATE_ERROR &amp;&amp;</span><br><span class="line">            mCurrentState != STATE_IDLE &amp;&amp;</span><br><span class="line">            mCurrentState != STATE_PREPARING);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onKeyDown</span><span class="params">(<span class="type">int</span> keyCode, KeyEvent event)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 主要是用于显示/隐藏控制器UI,以及处理播放暂停</span></span><br><span class="line">    <span class="comment">// 判断按键是否为需要处理的按键</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isKeyCodeSupported</span> <span class="operator">=</span> keyCode != KeyEvent.KEYCODE_BACK &amp;&amp;</span><br><span class="line">                                 keyCode != KeyEvent.KEYCODE_VOLUME_UP &amp;&amp;</span><br><span class="line">                                 keyCode != KeyEvent.KEYCODE_VOLUME_DOWN &amp;&amp;</span><br><span class="line">                                 keyCode != KeyEvent.KEYCODE_VOLUME_MUTE &amp;&amp;</span><br><span class="line">                                 keyCode != KeyEvent.KEYCODE_MENU &amp;&amp;</span><br><span class="line">                                 keyCode != KeyEvent.KEYCODE_CALL &amp;&amp;</span><br><span class="line">                                 keyCode != KeyEvent.KEYCODE_ENDCALL;</span><br><span class="line">    <span class="keyword">if</span> (isInPlaybackState() &amp;&amp; isKeyCodeSupported &amp;&amp; mMediaController != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_HEADSETHOOK ||</span><br><span class="line">                keyCode == KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mMediaPlayer.isPlaying()) &#123;</span><br><span class="line">                pause();</span><br><span class="line">                mMediaController.show();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                start();</span><br><span class="line">                mMediaController.hide();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_MEDIA_PLAY) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!mMediaPlayer.isPlaying()) &#123;</span><br><span class="line">                start();</span><br><span class="line">                mMediaController.hide();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_MEDIA_STOP</span><br><span class="line">                || keyCode == KeyEvent.KEYCODE_MEDIA_PAUSE) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mMediaPlayer.isPlaying()) &#123;</span><br><span class="line">                pause();</span><br><span class="line">                mMediaController.show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            toggleMediaControlsVisiblity();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.onKeyDown(keyCode, event);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 控制器UI显示与隐藏相互切换</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">toggleMediaControlsVisiblity</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (mMediaController.isShowing()) &#123;</span><br><span class="line">        mMediaController.hide();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mMediaController.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="主要操作方法"><a href="#主要操作方法" class="headerlink" title="主要操作方法"></a>主要操作方法</h4><h5 id="设置视频源路径"><a href="#设置视频源路径" class="headerlink" title="设置视频源路径"></a>设置视频源路径</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets video path.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> path the path of the video.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVideoPath</span><span class="params">(String path)</span> &#123;</span><br><span class="line">    setVideoURI(Uri.parse(path));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets video URI.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri the URI of the video.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVideoURI</span><span class="params">(Uri uri)</span> &#123;</span><br><span class="line">    setVideoURI(uri, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets video URI using specific headers.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri     the URI of the video.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> headers the headers for the URI request.</span></span><br><span class="line"><span class="comment"> *                Note that the cross domain redirection is allowed by default, but that can be</span></span><br><span class="line"><span class="comment"> *                changed with key/value pairs through the headers parameter with</span></span><br><span class="line"><span class="comment"> *                &quot;android-allow-cross-domain-redirect&quot; as the key and &quot;0&quot; or &quot;1&quot; as the value</span></span><br><span class="line"><span class="comment"> *                to disallow or allow cross domain redirection.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVideoURI</span><span class="params">(Uri uri, Map&lt;String, String&gt; headers)</span> &#123;</span><br><span class="line">    mUri = uri; <span class="comment">// 设置视频的Uri</span></span><br><span class="line">    mHeaders = headers; <span class="comment">// 设置请求头</span></span><br><span class="line">    mSeekWhenPrepared = <span class="number">0</span>; <span class="comment">// 设置预处理完成不跳转</span></span><br><span class="line">    openVideo(); <span class="comment">// 打开播放器并设置相应参数</span></span><br><span class="line">    requestLayout(); <span class="comment">// 请求重新测量布局</span></span><br><span class="line">    invalidate(); <span class="comment">// 请求重绘</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 最重要的方法————开启视频</span></span><br><span class="line"><span class="comment"> * 初始化MediaPlayer及其参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">openVideo</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (mUri == <span class="literal">null</span> || mSurfaceHolder == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// not ready for playback just yet, will try again later</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// we shouldn&#x27;t clear the target state, because somebody might have</span></span><br><span class="line">    <span class="comment">// called start() previously</span></span><br><span class="line">    release(<span class="literal">false</span>); <span class="comment">// 不改变状态地释放资源</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取音频管理器并请求获得音频焦点，销毁时需要释放焦点</span></span><br><span class="line">    <span class="type">AudioManager</span> <span class="variable">am</span> <span class="operator">=</span> (AudioManager) mContext.getSystemService(Context.AUDIO_SERVICE);</span><br><span class="line">    am.requestAudioFocus(<span class="literal">null</span>, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        mMediaPlayer = <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>();</span><br><span class="line">        <span class="comment">// 以下设置字幕相关的</span></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> create SubtitleController in MediaPlayer, but we need</span></span><br><span class="line">        <span class="comment">// a context for the subtitle renderers</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> getContext();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">SubtitleController</span> <span class="variable">controller</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubtitleController</span>(</span><br><span class="line">                context, mMediaPlayer.getMediaTimeProvider(), mMediaPlayer);</span><br><span class="line">        controller.registerRenderer(<span class="keyword">new</span> <span class="title class_">WebVttRenderer</span>(context));</span><br><span class="line">        controller.registerRenderer(<span class="keyword">new</span> <span class="title class_">TtmlRenderer</span>(context));</span><br><span class="line">        controller.registerRenderer(<span class="keyword">new</span> <span class="title class_">ClosedCaptionRenderer</span>(context));</span><br><span class="line">        mMediaPlayer.setSubtitleAnchor(controller, <span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置音频的SessionId</span></span><br><span class="line">        <span class="keyword">if</span> (mAudioSession != <span class="number">0</span>) &#123;</span><br><span class="line">            mMediaPlayer.setAudioSessionId(mAudioSession);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mAudioSession = mMediaPlayer.getAudioSessionId();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置各监听器</span></span><br><span class="line">        mMediaPlayer.setOnPreparedListener(mPreparedListener);</span><br><span class="line">        mMediaPlayer.setOnVideoSizeChangedListener(mSizeChangedListener);</span><br><span class="line">        mMediaPlayer.setOnCompletionListener(mCompletionListener);</span><br><span class="line">        mMediaPlayer.setOnErrorListener(mErrorListener);</span><br><span class="line">        mMediaPlayer.setOnInfoListener(mInfoListener);</span><br><span class="line">        mMediaPlayer.setOnBufferingUpdateListener(mBufferingUpdateListener);</span><br><span class="line"></span><br><span class="line">        mCurrentBufferPercentage = <span class="number">0</span>; <span class="comment">// 缓冲进度为0</span></span><br><span class="line">        mMediaPlayer.setDataSource(mContext, mUri, mHeaders); <span class="comment">// 设置播放地址等参数</span></span><br><span class="line">        mMediaPlayer.setDisplay(mSurfaceHolder); <span class="comment">// 设置Surface持有者，用于绘制视频</span></span><br><span class="line">        mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC); <span class="comment">// 设置音频流类型</span></span><br><span class="line">        mMediaPlayer.setScreenOnWhilePlaying(<span class="literal">true</span>); <span class="comment">// 设置当播放保持屏幕高亮</span></span><br><span class="line">        mMediaPlayer.prepareAsync(); <span class="comment">// 开始异步预处理</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加字幕流</span></span><br><span class="line">        <span class="keyword">for</span> (Pair&lt;InputStream, MediaFormat&gt; pending: mPendingSubtitleTracks) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mMediaPlayer.addSubtitleSource(pending.first, pending.second);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalStateException e) &#123;</span><br><span class="line">                mInfoListener.onInfo(</span><br><span class="line">                        mMediaPlayer, MediaPlayer.MEDIA_INFO_UNSUPPORTED_SUBTITLE, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// we don&#x27;t set the target state here either, but preserve the</span></span><br><span class="line">        <span class="comment">// target state that was there before.</span></span><br><span class="line">        mCurrentState = STATE_PREPARING; <span class="comment">// 当前为预处理中状态</span></span><br><span class="line">        attachMediaController(); <span class="comment">// 添加控制器（若没有设置，则不添加）</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">        Log.w(TAG, <span class="string">&quot;Unable to open content: &quot;</span> + mUri, ex);</span><br><span class="line">        mCurrentState = STATE_ERROR;</span><br><span class="line">        mTargetState = STATE_ERROR;</span><br><span class="line">        mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IllegalArgumentException ex) &#123;</span><br><span class="line">        Log.w(TAG, <span class="string">&quot;Unable to open content: &quot;</span> + mUri, ex);</span><br><span class="line">        mCurrentState = STATE_ERROR;</span><br><span class="line">        mTargetState = STATE_ERROR;</span><br><span class="line">        mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        mPendingSubtitleTracks.clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * release the media player in any state</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">release</span><span class="params">(<span class="type">boolean</span> cleartargetstate)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (mMediaPlayer != <span class="literal">null</span>) &#123;</span><br><span class="line">        mMediaPlayer.reset(); <span class="comment">// 重置播放器</span></span><br><span class="line">        mMediaPlayer.release(); <span class="comment">// 是否播放器</span></span><br><span class="line">        mMediaPlayer = <span class="literal">null</span>;</span><br><span class="line">        mPendingSubtitleTracks.clear(); <span class="comment">// 释放字幕</span></span><br><span class="line">        mCurrentState = STATE_IDLE; <span class="comment">// 当前状态为初始状态</span></span><br><span class="line">        <span class="keyword">if</span> (cleartargetstate) &#123; <span class="comment">// 需要清楚目标状态</span></span><br><span class="line">            mTargetState  = STATE_IDLE; <span class="comment">// 目标状态为初始状态</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">AudioManager</span> <span class="variable">am</span> <span class="operator">=</span> (AudioManager) mContext.getSystemService(Context.AUDIO_SERVICE);</span><br><span class="line">        am.abandonAudioFocus(<span class="literal">null</span>); <span class="comment">// 释放音频焦点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="播放"><a href="#播放" class="headerlink" title="播放"></a>播放</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isInPlaybackState()) &#123; <span class="comment">// 播放器可以时</span></span><br><span class="line">        mMediaPlayer.start(); <span class="comment">// 开始播放</span></span><br><span class="line">        mCurrentState = STATE_PLAYING; <span class="comment">// 当前状态为播放状态</span></span><br><span class="line">    &#125;</span><br><span class="line">    mTargetState = STATE_PLAYING; <span class="comment">// 目标状态为播放状态</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="暂停"><a href="#暂停" class="headerlink" title="暂停"></a>暂停</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pause</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isInPlaybackState()) &#123; <span class="comment">// 播放器可以时</span></span><br><span class="line">        <span class="keyword">if</span> (mMediaPlayer.isPlaying()) &#123; <span class="comment">// 正在播放</span></span><br><span class="line">            mMediaPlayer.pause(); <span class="comment">// 暂停</span></span><br><span class="line">            mCurrentState = STATE_PAUSED; <span class="comment">// 当前状态为暂停状态</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    mTargetState = STATE_PAUSED; <span class="comment">// 目标状态为暂停状态</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="挂起播放器"><a href="#挂起播放器" class="headerlink" title="挂起播放器"></a>挂起播放器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 此方法一般在Activity进入onStop()状态时调用，不改变状态地释放资源</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">suspend</span><span class="params">()</span> &#123;</span><br><span class="line">    release(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="恢复播放器"><a href="#恢复播放器" class="headerlink" title="恢复播放器"></a>恢复播放器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 此方法一般在Activity从后台调到前台进入onResume()状态时调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">resume</span><span class="params">()</span> &#123;</span><br><span class="line">    openVideo();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">getDuration</span><span class="params">()</span> <span class="comment">// 获取时长</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getCurrentPosition</span><span class="params">()</span> <span class="comment">// 获取当前播放进度</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">seekTo</span><span class="params">(<span class="type">int</span> msec)</span> <span class="comment">// 跳转到指定位置</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">isPlaying</span><span class="params">()</span> <span class="comment">// 视频是否在播放</span></span><br><span class="line">getBufferPercentage() <span class="comment">// 获取缓冲百分比</span></span><br></pre></td></tr></table></figure><p>其他 控制器UI加入 及 字幕相关 等方法就不一一分析了。可以自行查看<a href="https://developer.android.google.cn/reference/android/widget/VideoView">VideoView源码</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在需要播放视频的时候，我们会往往会直接使用VideoView，因为方便，简单几行代码就搞定了。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="Android" scheme="http://hezhubo.github.io/categories/Android/"/>
    
    
      <category term="音视频" scheme="http://hezhubo.github.io/tags/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
      <category term="多媒体" scheme="http://hezhubo.github.io/tags/%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
    
      <category term="videoview" scheme="http://hezhubo.github.io/tags/videoview/"/>
    
  </entry>
  
  <entry>
    <title>android多媒体播放器之MediaPlayer</title>
    <link href="http://hezhubo.github.io/2016/08/27/android-mediaplayer/"/>
    <id>http://hezhubo.github.io/2016/08/27/android-mediaplayer/</id>
    <published>2016-08-27T12:24:15.000Z</published>
    <updated>2022-06-01T06:44:44.727Z</updated>
    
    <content type="html"><![CDATA[<p><strong>废话少说，先上一张无比重要的图：MediaPlayer状态图，读懂此图那后面的都是废话了。</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://developer.android.google.cn/images/mediaplayer_state_diagram.gif?hl=zh-cn" alt="android官方MediaPlayer状态图" title="">                </div>                <div class="image-caption">android官方MediaPlayer状态图</div>            </figure><h4 id="MediaPlayer的简单使用"><a href="#MediaPlayer的简单使用" class="headerlink" title="MediaPlayer的简单使用"></a>MediaPlayer的简单使用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">MediaPlayer</span> <span class="variable">mediaPlayer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    mediaPlayer.setDataSource(<span class="string">&quot;/mnt/sdcard/test.mp3&quot;</span>); <span class="comment">// 设置多媒体文件路径，支持本地文件，http，rtsp协议</span></span><br><span class="line">    mediaPlayer.prepare(); <span class="comment">// 以同步(阻塞)方式，预处理（加载）多媒体文件，此方法一般用于本地文件 </span></span><br><span class="line">    mediaPlayer.start(); <span class="comment">// 开始播放</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MediaPlayer的基本方法说明"><a href="#MediaPlayer的基本方法说明" class="headerlink" title="MediaPlayer的基本方法说明"></a>MediaPlayer的基本方法说明</h4><h5 id="创建MediaPlayer对象"><a href="#创建MediaPlayer对象" class="headerlink" title="创建MediaPlayer对象"></a>创建MediaPlayer对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基本的构造方法</span></span><br><span class="line"><span class="type">MediaPlayer</span> <span class="variable">mediaPlayer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态的构造方法</span></span><br><span class="line">Context context; <span class="comment">// 上下文</span></span><br><span class="line">Uri uri; <span class="comment">// 多媒体文件的URI</span></span><br><span class="line">SurfaceHolder holder; <span class="comment">// surface持有者，用于视频画面输出</span></span><br><span class="line">AudioAttributes audioAttributes; <span class="comment">// 封装音频流信息的属性集合类</span></span><br><span class="line"><span class="type">int</span> audioSessionId; <span class="comment">// 音频的Session Id</span></span><br><span class="line"><span class="type">int</span> resid; <span class="comment">// 多媒体资源Id</span></span><br><span class="line"><span class="type">MediaPlayer</span> <span class="variable">mediaPlayer</span> <span class="operator">=</span> MediaPlayer.create(context, uri);</span><br><span class="line"><span class="type">MediaPlayer</span> <span class="variable">mediaPlayer</span> <span class="operator">=</span> MediaPlayer.create(context, uri, holder);</span><br><span class="line"><span class="type">MediaPlayer</span> <span class="variable">mediaPlayer</span> <span class="operator">=</span> MediaPlayer.create(context, uri, holder, audioAttributes, audioSessionId);</span><br><span class="line"><span class="type">MediaPlayer</span> <span class="variable">mediaPlayer</span> <span class="operator">=</span> MediaPlayer.create(context, resid);</span><br><span class="line"><span class="type">MediaPlayer</span> <span class="variable">mediaPlayer</span> <span class="operator">=</span> MediaPlayer.create(context, resid, audioAttributes, audioSessionId);</span><br></pre></td></tr></table></figure><h5 id="设置MediaPlayer的各种监听器"><a href="#设置MediaPlayer的各种监听器" class="headerlink" title="设置MediaPlayer的各种监听器"></a>设置MediaPlayer的各种监听器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 预处理监听器</span></span><br><span class="line">mediaPlayer.setOnPreparedListener(<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnPreparedListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPrepared</span><span class="params">(MediaPlayer mp)</span> &#123;</span><br><span class="line">        <span class="comment">// 在MediaPlayer完成加载多媒体文件时回调此方法</span></span><br><span class="line">        <span class="comment">// 此时可以获取多媒体文件信息（如视频宽高，时长等）</span></span><br><span class="line">        <span class="comment">// 可以开始执行播放</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 播放完成监听器</span></span><br><span class="line">mediaPlayer.setOnCompletionListener(<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnCompletionListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompletion</span><span class="params">(MediaPlayer mp)</span> &#123;</span><br><span class="line">        <span class="comment">// 在MediaPlayer播放完成时回调此方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 播放出错监听器</span></span><br><span class="line">mediaPlayer.setOnErrorListener(<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnErrorListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onError</span><span class="params">(MediaPlayer mp, <span class="type">int</span> what, <span class="type">int</span> extra)</span> &#123;</span><br><span class="line">        <span class="comment">// 使用播放器过程中出现错误会回调此方法</span></span><br><span class="line">        <span class="comment">// what 发生的错误类型, extra 具体的错误代码</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 播放过程中部分信息监听器</span></span><br><span class="line">mediaPlayer.setOnInfoListener(<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnInfoListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onInfo</span><span class="params">(MediaPlayer mp, <span class="type">int</span> what, <span class="type">int</span> extra)</span> &#123;</span><br><span class="line">        <span class="comment">// 在播放器播放过程中部分状态信息会回调此方法</span></span><br><span class="line">        <span class="comment">// what 信息或警告的类型, extra 具体的信息代码</span></span><br><span class="line">        <span class="comment">// 如 what: MEDIA_INFO_BUFFERING_START 开始缓冲</span></span><br><span class="line">        <span class="comment">// MEDIA_INFO_BUFFERING_END 缓冲完成</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 视频尺寸变化监听器</span></span><br><span class="line">mediaPlayer.setOnVideoSizeChangedListener(<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnVideoSizeChangedListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onVideoSizeChanged</span><span class="params">(MediaPlayer mp, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">        <span class="comment">// 在播放视频时视频宽高发生变化回调此方法</span></span><br><span class="line">        <span class="comment">// 此时一般会去处理视频输出的View的宽高布局</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 缓冲进度更新监听器</span></span><br><span class="line">mediaPlayer.setOnBufferingUpdateListener(<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnBufferingUpdateListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBufferingUpdate</span><span class="params">(MediaPlayer mp, <span class="type">int</span> percent)</span> &#123;</span><br><span class="line">        <span class="comment">// 在缓冲进度改变时会回调此方法</span></span><br><span class="line">        <span class="comment">// percent 缓冲百分比</span></span><br><span class="line">        <span class="comment">// 一般用于更新进度条的第二进度</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 播放跳转完成监听器</span></span><br><span class="line">mediaPlayer.setOnSeekCompleteListener(<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnSeekCompleteListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSeekComplete</span><span class="params">(MediaPlayer mp)</span> &#123;</span><br><span class="line">        <span class="comment">// 在调用seekTo()，跳转完成后会回调此方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 字幕监听器</span></span><br><span class="line">mediaPlayer.setOnTimedTextListener(<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnTimedTextListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTimedText</span><span class="params">(MediaPlayer mp, TimedText text)</span> &#123;</span><br><span class="line">        <span class="comment">// 当有字幕需要显示时会回调此方法</span></span><br><span class="line">        <span class="comment">// text 包含字幕内容，格式</span></span><br><span class="line">        <span class="comment">// 我暂时没有用过此监听器</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// API23 媒体数据可用监听器</span></span><br><span class="line">mediaPlayer.setOnTimedMetaDataAvailableListener(<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>.OnTimedMetaDataAvailableListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTimedMetaDataAvailable</span><span class="params">(MediaPlayer mp, TimedMetaData data)</span> &#123;</span><br><span class="line">        <span class="comment">// 当有可用的元数据时回调此方法</span></span><br><span class="line">        <span class="comment">// data 数据元，包含时间戳</span></span><br><span class="line">        <span class="comment">// 我暂时没有用过此监听器，我猜想可以用此回调来实现边看边缓存视频</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="MediaPlayer的操作方法"><a href="#MediaPlayer的操作方法" class="headerlink" title="MediaPlayer的操作方法"></a>MediaPlayer的操作方法</h5><h6 id="设置数据元"><a href="#设置数据元" class="headerlink" title="设置数据元"></a>设置数据元</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Context context; <span class="comment">// 上下文</span></span><br><span class="line">Uri uri; <span class="comment">// 多媒体文件的URI</span></span><br><span class="line">Map&lt;String, String&gt; headers; <span class="comment">// http的请求头</span></span><br><span class="line">String path; <span class="comment">// 多媒体路径，支持本地文件，http，rtsp协议</span></span><br><span class="line">FileDescriptor fd; <span class="comment">// 多媒体文件描述符，可通过AssetManager去构建</span></span><br><span class="line"><span class="type">long</span> offset; <span class="comment">// 以字节为单位的数据偏移量</span></span><br><span class="line"><span class="type">long</span> length; <span class="comment">// 要播放的数据字节长度</span></span><br><span class="line">MediaDataSource dataSource; <span class="comment">// 为framework层提供媒体数据的类</span></span><br><span class="line">mediaPlayer.setDataSource(context, uri);</span><br><span class="line">mediaPlayer.setDataSource(context, uri, headers); <span class="comment">// 暂时没用过</span></span><br><span class="line">mediaPlayer.setDataSource(path);</span><br><span class="line">mediaPlayer.setDataSource(fd);</span><br><span class="line">mediaPlayer.setDataSource(fd, offset, length); <span class="comment">// 暂时没用过</span></span><br><span class="line">mediaPlayer.setDataSource(dataSource); <span class="comment">// 暂时没用过</span></span><br></pre></td></tr></table></figure><h6 id="预处理-加载-多媒体数据"><a href="#预处理-加载-多媒体数据" class="headerlink" title="预处理(加载)多媒体数据"></a>预处理(加载)多媒体数据</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mediaPlayer.prepare(); <span class="comment">// 会阻塞当前线程</span></span><br><span class="line">mediaPlayer.prepareAsync(); <span class="comment">// 异步加载</span></span><br></pre></td></tr></table></figure><h6 id="开始播放"><a href="#开始播放" class="headerlink" title="开始播放"></a>开始播放</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mediaPlayer.start(); <span class="comment">// 需要在预处理完成后才会起作用</span></span><br></pre></td></tr></table></figure><h6 id="暂停播放"><a href="#暂停播放" class="headerlink" title="暂停播放"></a>暂停播放</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mediaPlayer.pause(); <span class="comment">// 需要在预处理完成后才会起作用</span></span><br></pre></td></tr></table></figure><h6 id="跳转到指定位置"><a href="#跳转到指定位置" class="headerlink" title="跳转到指定位置"></a>跳转到指定位置</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> msec; <span class="comment">// 跳转位置（单位毫秒） 取值要大于0，小于视频总时长</span></span><br><span class="line">mediaPlayer.seekTo(msec); <span class="comment">// 需要在预处理完成后才会起作用</span></span><br></pre></td></tr></table></figure><h6 id="获取当前播放位置"><a href="#获取当前播放位置" class="headerlink" title="获取当前播放位置"></a>获取当前播放位置</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">currentPosition</span> <span class="operator">=</span> mediaPlayer.getCurrentPosition(); <span class="comment">// 需要在预处理完成后才会起作用</span></span><br></pre></td></tr></table></figure><h6 id="获取当前总时长"><a href="#获取当前总时长" class="headerlink" title="获取当前总时长"></a>获取当前总时长</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">duration</span> <span class="operator">=</span> mediaPlayer.getDuration(); <span class="comment">// 需要在预处理完成后才会起作用</span></span><br></pre></td></tr></table></figure><h6 id="停止播放"><a href="#停止播放" class="headerlink" title="停止播放"></a>停止播放</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mediaPlayer.stop(); <span class="comment">// 需要在预处理完成后才会起作用，若想继续播放，需要重新加载多媒体文件</span></span><br></pre></td></tr></table></figure><h6 id="重置播放器"><a href="#重置播放器" class="headerlink" title="重置播放器"></a>重置播放器</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mediaPlayer.reset(); <span class="comment">// 重置mediaPlayer为最初状态，再次使用需要重新设置多媒体路径</span></span><br></pre></td></tr></table></figure><h6 id="释放资源"><a href="#释放资源" class="headerlink" title="释放资源"></a>释放资源</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mediaPlayer.release(); <span class="comment">// 释放与mediaPlayer对象关联的所有资源</span></span><br></pre></td></tr></table></figure><h6 id="设置视频画面输出"><a href="#设置视频画面输出" class="headerlink" title="设置视频画面输出"></a>设置视频画面输出</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过SurfaceView来显示视频</span></span><br><span class="line">SurfaceView surfaceView; <span class="comment">// 通过xml资源或是使用代码自行创建</span></span><br><span class="line"><span class="comment">// 需要给surface持有者添加监听器</span></span><br><span class="line">surfaceView.getHolder().addCallback(<span class="keyword">new</span> <span class="title class_">SurfaceHolder</span>.Callback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceCreated</span><span class="params">(SurfaceHolder holder)</span> &#123;</span><br><span class="line">        <span class="comment">// surfaceView成功创建，此时holder才可用</span></span><br><span class="line">        mediaPlayer.setDisplay(holder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceChanged</span><span class="params">(SurfaceHolder holder, <span class="type">int</span> format, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">        <span class="comment">// surface发生改变时</span></span><br><span class="line">        <span class="comment">// format 格式， width 宽， height 高</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceDestroyed</span><span class="params">(SurfaceHolder holder)</span> &#123;</span><br><span class="line">        <span class="comment">// surfaceView销毁时</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过TextureView来显示视频</span></span><br><span class="line">TextureView textureView; <span class="comment">// 通过xml资源或是使用代码自行创建</span></span><br><span class="line">textureView.setSurfaceTextureListener(<span class="keyword">new</span> <span class="title class_">TextureView</span>.SurfaceTextureListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSurfaceTextureAvailable</span><span class="params">(SurfaceTexture surface, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">        <span class="comment">// 当SurfaceTexture可用时</span></span><br><span class="line">        <span class="comment">// width 纹理宽， height 纹理高</span></span><br><span class="line">        <span class="type">Surface</span> <span class="variable">displaySurface</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Surface</span>(surface); <span class="comment">// 通过SurfaceTexture来构建Surface </span></span><br><span class="line">        mediaPlayer.setSurface(displaySurface);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSurfaceTextureSizeChanged</span><span class="params">(SurfaceTexture surface, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">        <span class="comment">// 纹理尺寸发生改变时</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onSurfaceTextureDestroyed</span><span class="params">(SurfaceTexture surface)</span> &#123;</span><br><span class="line">        <span class="comment">// textureView销毁时</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSurfaceTextureUpdated</span><span class="params">(SurfaceTexture surface)</span> &#123;</span><br><span class="line">        <span class="comment">// textureView重新设置了SurfaceTexture</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h6 id="获取视频宽高"><a href="#获取视频宽高" class="headerlink" title="获取视频宽高"></a>获取视频宽高</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> mediaPlayer.getVideoWidth(); <span class="comment">// 需要在预处理完成后才会起作用</span></span><br><span class="line"><span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> mediaPlayer.getVideoHeight(); <span class="comment">// 需要在预处理完成后才会起作用</span></span><br></pre></td></tr></table></figure><p>其他方法就不一一列出了，可以自行查看<a href="https://developer.android.google.cn/reference/android/media/MediaPlayer">MediaPlayer源码</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;废话少说，先上一张无比重要的图：MediaPlayer状态图，读懂此图那后面的都是废话了。&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox
      
    
    </summary>
    
      <category term="Android" scheme="http://hezhubo.github.io/categories/Android/"/>
    
    
      <category term="音视频" scheme="http://hezhubo.github.io/tags/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
      <category term="mediaplayer" scheme="http://hezhubo.github.io/tags/mediaplayer/"/>
    
      <category term="多媒体" scheme="http://hezhubo.github.io/tags/%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>ADB常用命令</title>
    <link href="http://hezhubo.github.io/2016/07/06/android-adb-command/"/>
    <id>http://hezhubo.github.io/2016/07/06/android-adb-command/</id>
    <published>2016-07-06T15:35:56.000Z</published>
    <updated>2022-06-01T06:51:54.299Z</updated>
    
    <content type="html"><![CDATA[<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><h5 id="adb帮助"><a href="#adb帮助" class="headerlink" title="adb帮助"></a>adb帮助</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb <span class="built_in">help</span></span><br></pre></td></tr></table></figure><h5 id="启动adb服务"><a href="#启动adb服务" class="headerlink" title="启动adb服务"></a>启动adb服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb start-server</span><br></pre></td></tr></table></figure><h5 id="终止adb服务"><a href="#终止adb服务" class="headerlink" title="终止adb服务"></a>终止adb服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb kill-server</span><br></pre></td></tr></table></figure><h5 id="显示当前运行的全部设备"><a href="#显示当前运行的全部设备" class="headerlink" title="显示当前运行的全部设备"></a>显示当前运行的全部设备</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices [-l]　　// [-l] 显示设备详细信息</span><br></pre></td></tr></table></figure><h5 id="对某一设备执行命令"><a href="#对某一设备执行命令" class="headerlink" title="对某一设备执行命令"></a>对某一设备执行命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb -s &lt;specific device&gt;　　// &lt;specific device&gt; 设备ID</span><br></pre></td></tr></table></figure><h5 id="重启设备"><a href="#重启设备" class="headerlink" title="重启设备"></a>重启设备</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb reboot</span><br></pre></td></tr></table></figure><h5 id="以网络方式连接设备"><a href="#以网络方式连接设备" class="headerlink" title="以网络方式连接设备"></a>以网络方式连接设备</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect &lt;host&gt;[:&lt;port&gt;]　　// 设备ip+端口 默认5555</span><br></pre></td></tr></table></figure><h5 id="断开网络设备"><a href="#断开网络设备" class="headerlink" title="断开网络设备"></a>断开网络设备</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb disconnect [&lt;host&gt;[:&lt;port&gt;]]　　// 设备ip+端口 默认5555</span><br></pre></td></tr></table></figure><h5 id="安装（覆盖）应用"><a href="#安装（覆盖）应用" class="headerlink" title="安装（覆盖）应用"></a>安装（覆盖）应用</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install -r &lt;file&gt;　　// &lt;file&gt; apk路径</span><br></pre></td></tr></table></figure><h5 id="卸载应用"><a href="#卸载应用" class="headerlink" title="卸载应用"></a>卸载应用</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb uninstall &lt;package&gt;　　// &lt;package&gt; 应用包名</span><br></pre></td></tr></table></figure><h5 id="传输文件到设备"><a href="#传输文件到设备" class="headerlink" title="传输文件到设备"></a>传输文件到设备</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb push &lt;<span class="built_in">local</span>&gt;... &lt;remote&gt;　　// &lt;<span class="built_in">local</span>&gt; 本地文件路径  &lt;remote&gt; 设备保存路径</span><br></pre></td></tr></table></figure><h5 id="拉取设备文件到电脑"><a href="#拉取设备文件到电脑" class="headerlink" title="拉取设备文件到电脑"></a>拉取设备文件到电脑</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull &lt;remote&gt;... &lt;<span class="built_in">local</span>&gt;　　// &lt;<span class="built_in">local</span>&gt; 电脑保存路径  &lt;remote&gt; 设备文件路径</span><br></pre></td></tr></table></figure><h5 id="打印日志"><a href="#打印日志" class="headerlink" title="打印日志"></a>打印日志</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb logcat --<span class="built_in">help</span>　　// logcat帮助</span><br><span class="line">adb logcat [options] [filterspecs]　　// [options] [filterspecs] 过滤参数</span><br></pre></td></tr></table></figure><h6 id="清除缓冲区日志"><a href="#清除缓冲区日志" class="headerlink" title="清除缓冲区日志"></a>清除缓冲区日志</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -c</span><br></pre></td></tr></table></figure><h6 id="输出日志到文件"><a href="#输出日志到文件" class="headerlink" title="输出日志到文件"></a>输出日志到文件</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -f &lt;filename&gt;　　// &lt;filename&gt;文件路径(手机上的路径)</span><br><span class="line">adb logcat -d -f &lt;filename&gt;　　// 边输出到屏幕，边保存</span><br></pre></td></tr></table></figure><h6 id="指定日志输出格式"><a href="#指定日志输出格式" class="headerlink" title="指定日志输出格式"></a>指定日志输出格式</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -v time　　// 带时间的输出</span><br><span class="line">adb logcat -v threadtime　　// 带时间和线程信息</span><br></pre></td></tr></table></figure><h6 id="过滤标签"><a href="#过滤标签" class="headerlink" title="过滤标签"></a>过滤标签</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -s hezb　　// 过滤TAG为 hezb 的所以<span class="built_in">log</span></span><br><span class="line">adb logcat -s hezb System.out　　// 过滤多个TAG(hezb, System.out)</span><br></pre></td></tr></table></figure><h6 id="按等级过滤"><a href="#按等级过滤" class="headerlink" title="按等级过滤"></a>按等级过滤</h6><blockquote><p><em>优先级从低到高：</em><br>Log.v  - VERBOSE  : 黑色<br>Log.d  - DEBUG     : 蓝色<br>Log.i   - INFO         : 绿色<br>Log.w - WARN      : 橙色<br>Log.e  - ERROR     : 红色</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb logcat *:D　　// 过滤Debug以上优先级的<span class="built_in">log</span></span><br><span class="line">adb logcat hezb:D *:S　　// 过滤TAG为 hezb Debug以上优先级的<span class="built_in">log</span>,没有 *:S 则无法正确输出</span><br><span class="line">adb logcat hezb:D <span class="built_in">test</span>:I *:S　　// 过滤多个TAG(hezb,<span class="built_in">test</span>),并且各自优先级可选</span><br></pre></td></tr></table></figure><h6 id="使用系统命令过滤"><a href="#使用系统命令过滤" class="headerlink" title="使用系统命令过滤"></a>使用系统命令过滤</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb logcat | grep <span class="string">&quot;hezb&quot;</span>　　// linux 使用 grep 命令，详细过滤看grep用法</span><br><span class="line">adb logcat | find <span class="string">&quot;hezb&quot;</span>　　// windows 使用 find 命令</span><br></pre></td></tr></table></figure><h5 id="登陆设备"><a href="#登陆设备" class="headerlink" title="登陆设备"></a>登陆设备</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell　　// 普通用户权限</span><br><span class="line">adb root　　// root用户权限(需要手机已经root)</span><br></pre></td></tr></table></figure><h6 id="shell权限下"><a href="#shell权限下" class="headerlink" title="shell权限下"></a>shell权限下</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su　　// 切换成root用户(需要手机已经root)</span><br></pre></td></tr></table></figure><h6 id="root权限下"><a href="#root权限下" class="headerlink" title="root权限下"></a>root权限下</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount / 　　// 挂载 系统文件夹 到当前目录</span><br><span class="line"><span class="built_in">rm</span> xxx.apk　　// 删除系统应用</span><br></pre></td></tr></table></figure><h6 id="模拟键盘鼠标事件"><a href="#模拟键盘鼠标事件" class="headerlink" title="模拟键盘鼠标事件"></a>模拟键盘鼠标事件</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">input keyevent &lt;value&gt;　　// 模拟键盘按键 value对应键盘键值</span><br><span class="line">sendevent [device] [<span class="built_in">type</span>] [code] [value]　　// 全事件，需要多个组合使用  device: /dev/input/event0 </span><br><span class="line">getevent　　// 监听当前手机事件</span><br></pre></td></tr></table></figure><p>键盘事件表</p><table><thead><tr><th align="left">KeyEvent Value</th><th align="left">KEYCODE</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">KEYCODE_UNKNOWN</td></tr><tr><td align="left">1</td><td align="left">KEYCODE_MENU</td></tr><tr><td align="left">2</td><td align="left">KEYCODE_SOFT_RIGHT</td></tr><tr><td align="left">3</td><td align="left">KEYCODE_HOME</td></tr><tr><td align="left">4</td><td align="left">KEYCODE_BACK</td></tr><tr><td align="left">5</td><td align="left">KEYCODE_CALL</td></tr><tr><td align="left">6</td><td align="left">KEYCODE_ENDCALL</td></tr><tr><td align="left">7</td><td align="left">KEYCODE_0</td></tr><tr><td align="left">8</td><td align="left">KEYCODE_1</td></tr><tr><td align="left">9</td><td align="left">KEYCODE_2</td></tr><tr><td align="left">10</td><td align="left">KEYCODE_3</td></tr><tr><td align="left">11</td><td align="left">KEYCODE_4</td></tr><tr><td align="left">12</td><td align="left">KEYCODE_5</td></tr><tr><td align="left">13</td><td align="left">KEYCODE_6</td></tr><tr><td align="left">14</td><td align="left">KEYCODE_7</td></tr><tr><td align="left">15</td><td align="left">KEYCODE_8</td></tr><tr><td align="left">16</td><td align="left">KEYCODE_9</td></tr><tr><td align="left">17</td><td align="left">KEYCODE_STAR</td></tr><tr><td align="left">18</td><td align="left">KEYCODE_POUND</td></tr><tr><td align="left">19</td><td align="left">KEYCODE_DPAD_UP</td></tr><tr><td align="left">20</td><td align="left">KEYCODE_DPAD_DOWN</td></tr><tr><td align="left">21</td><td align="left">KEYCODE_DPAD_LEFT</td></tr><tr><td align="left">22</td><td align="left">KEYCODE_DPAD_RIGHT</td></tr><tr><td align="left">23</td><td align="left">KEYCODE_DPAD_CENTER</td></tr><tr><td align="left">24</td><td align="left">KEYCODE_VOLUME_UP</td></tr><tr><td align="left">25</td><td align="left">KEYCODE_VOLUME_DOWN</td></tr><tr><td align="left">26</td><td align="left">KEYCODE_POWER</td></tr><tr><td align="left">27</td><td align="left">KEYCODE_CAMERA</td></tr><tr><td align="left">28</td><td align="left">KEYCODE_CLEAR</td></tr><tr><td align="left">29</td><td align="left">KEYCODE_A</td></tr><tr><td align="left">30</td><td align="left">KEYCODE_B</td></tr><tr><td align="left">31</td><td align="left">KEYCODE_C</td></tr><tr><td align="left">32</td><td align="left">KEYCODE_D</td></tr><tr><td align="left">33</td><td align="left">KEYCODE_E</td></tr><tr><td align="left">34</td><td align="left">KEYCODE_F</td></tr><tr><td align="left">35</td><td align="left">KEYCODE_G</td></tr><tr><td align="left">36</td><td align="left">KEYCODE_H</td></tr><tr><td align="left">37</td><td align="left">KEYCODE_I</td></tr><tr><td align="left">38</td><td align="left">KEYCODE_J</td></tr><tr><td align="left">39</td><td align="left">KEYCODE_K</td></tr><tr><td align="left">40</td><td align="left">KEYCODE_L</td></tr><tr><td align="left">41</td><td align="left">KEYCODE_M</td></tr><tr><td align="left">42</td><td align="left">KEYCODE_N</td></tr><tr><td align="left">43</td><td align="left">KEYCODE_O</td></tr><tr><td align="left">44</td><td align="left">KEYCODE_P</td></tr><tr><td align="left">45</td><td align="left">KEYCODE_Q</td></tr><tr><td align="left">46</td><td align="left">KEYCODE_R</td></tr><tr><td align="left">47</td><td align="left">KEYCODE_S</td></tr><tr><td align="left">48</td><td align="left">KEYCODE_T</td></tr><tr><td align="left">49</td><td align="left">KEYCODE_U</td></tr><tr><td align="left">50</td><td align="left">KEYCODE_V</td></tr><tr><td align="left">51</td><td align="left">KEYCODE_W</td></tr><tr><td align="left">52</td><td align="left">KEYCODE_X</td></tr><tr><td align="left">53</td><td align="left">KEYCODE_Y</td></tr><tr><td align="left">54</td><td align="left">KEYCODE_Z</td></tr><tr><td align="left">55</td><td align="left">KEYCODE_COMMA</td></tr><tr><td align="left">56</td><td align="left">KEYCODE_PERIOD</td></tr><tr><td align="left">57</td><td align="left">KEYCODE_ALT_LEFT</td></tr><tr><td align="left">58</td><td align="left">KEYCODE_ALT_RIGHT</td></tr><tr><td align="left">59</td><td align="left">KEYCODE_SHIFT_LEFT</td></tr><tr><td align="left">60</td><td align="left">KEYCODE_SHIFT_RIGHT</td></tr><tr><td align="left">61</td><td align="left">KEYCODE_TAB</td></tr><tr><td align="left">62</td><td align="left">KEYCODE_SPACE</td></tr><tr><td align="left">63</td><td align="left">KEYCODE_SYM</td></tr><tr><td align="left">64</td><td align="left">KEYCODE_EXPLORER</td></tr><tr><td align="left">65</td><td align="left">KEYCODE_ENVELOPE</td></tr><tr><td align="left">66</td><td align="left">KEYCODE_ENTER</td></tr><tr><td align="left">67</td><td align="left">KEYCODE_DEL</td></tr><tr><td align="left">68</td><td align="left">KEYCODE_GRAVE</td></tr><tr><td align="left">69</td><td align="left">KEYCODE_MINUS</td></tr><tr><td align="left">70</td><td align="left">KEYCODE_EQUALS</td></tr><tr><td align="left">71</td><td align="left">KEYCODE_LEFT_BRACKET</td></tr><tr><td align="left">72</td><td align="left">KEYCODE_RIGHT_BRACKET</td></tr><tr><td align="left">73</td><td align="left">KEYCODE_BACKSLASH</td></tr><tr><td align="left">74</td><td align="left">KEYCODE_SEMICOLON</td></tr><tr><td align="left">75</td><td align="left">KEYCODE_APOSTROPHE</td></tr><tr><td align="left">76</td><td align="left">KEYCODE_SLASH</td></tr><tr><td align="left">77</td><td align="left">KEYCODE_AT</td></tr><tr><td align="left">78</td><td align="left">KEYCODE_NUM</td></tr><tr><td align="left">79</td><td align="left">KEYCODE_HEADSETHOOK</td></tr><tr><td align="left">80</td><td align="left">KEYCODE_FOCUS</td></tr><tr><td align="left">81</td><td align="left">KEYCODE_PLUS</td></tr><tr><td align="left">82</td><td align="left">KEYCODE_MENU</td></tr><tr><td align="left">83</td><td align="left">KEYCODE_NOTIFICATION</td></tr><tr><td align="left">84</td><td align="left">KEYCODE_SEARCH</td></tr><tr><td align="left">85</td><td align="left">TAG_LAST_KEYCODE</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h4&gt;&lt;h5 id=&quot;adb帮助&quot;&gt;&lt;a href=&quot;#adb帮助&quot; class=&quot;headerlink&quot; title=&quot;adb帮助&quot;&gt;
      
    
    </summary>
    
      <category term="Android" scheme="http://hezhubo.github.io/categories/Android/"/>
    
    
      <category term="android" scheme="http://hezhubo.github.io/tags/android/"/>
    
      <category term="adb" scheme="http://hezhubo.github.io/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg 常用命令</title>
    <link href="http://hezhubo.github.io/2016/07/05/FFmpeg-command/"/>
    <id>http://hezhubo.github.io/2016/07/05/FFmpeg-command/</id>
    <published>2016-07-05T01:35:34.000Z</published>
    <updated>2022-06-01T03:53:42.517Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="分离视频音频流"><a href="#分离视频音频流" class="headerlink" title="分离视频音频流"></a>分离视频音频流</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input_file -vcodec copy -an output_file_video　　// 分离视频流</span><br><span class="line">ffmpeg -i input_file -acodec copy -vn output_file_audio　　// 分离音频流</span><br></pre></td></tr></table></figure><h4 id="视频裁剪"><a href="#视频裁剪" class="headerlink" title="视频裁剪"></a>视频裁剪</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -ss 0:1:30 -t 0:0:20 -i input.mp4 -vcodec copy -acodec copy output.mp4    // 时间格式可以是 00:00:00.000 或 x.xxx(单位秒)</span><br></pre></td></tr></table></figure><h4 id="视频合成"><a href="#视频合成" class="headerlink" title="视频合成"></a>视频合成</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">&quot;1.mp4&quot;</span> -vcodec copy -acodec copy -vbsf h264_mp4toannexb <span class="string">&quot;1.ts&quot;</span></span><br><span class="line">ffmpeg -i <span class="string">&quot;2.mp4&quot;</span> -vcodec copy -acodec copy -vbsf h264_mp4toannexb <span class="string">&quot;2.ts&quot;</span></span><br><span class="line">ffmpeg -i <span class="string">&quot;concat:1.ts|2.ts&quot;</span> -acodec copy -vcodec copy -absf aac_adtstoasc <span class="string">&quot;output.mp4&quot;</span>    // 若只有1个ts,不需要concat:</span><br></pre></td></tr></table></figure><h4 id="视频截图"><a href="#视频截图" class="headerlink" title="视频截图"></a>视频截图</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">&quot;input.mp4&quot;</span> -r 2 -start_number 1 -vframes 10 -s 60x60 <span class="string">&quot;thumb_%d.jpg&quot;</span>    // 连续截取图片，设置帧率为2fps，截取10张，也就是截取了5秒的视频截图，截图保存的名称的第一张为thumb_1.jpg，往后自动累加</span><br><span class="line">ffmpeg -ss 00:56 -i <span class="string">&quot;input.mp4&quot;</span> -f image2 -s 100x100 <span class="string">&quot;thumb.jpg&quot;</span>    // 截取指定时间（00:56）的画面</span><br></pre></td></tr></table></figure><h4 id="视频录制"><a href="#视频录制" class="headerlink" title="视频录制"></a>视频录制</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">&quot;rtmp://192.168.1.100:1935/live/demo&quot;</span> –vcodec copy <span class="string">&quot;output.mp4&quot;</span></span><br></pre></td></tr></table></figure><h4 id="YUV序列播放"><a href="#YUV序列播放" class="headerlink" title="YUV序列播放"></a>YUV序列播放</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffplay -f rawvideo -video_size 1920x1080 input.yuv</span><br></pre></td></tr></table></figure><h4 id="YUV序列转AVI"><a href="#YUV序列转AVI" class="headerlink" title="YUV序列转AVI"></a>YUV序列转AVI</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg –s w*h –pix_fmt yuv420p –i input.yuv –vcodec mpeg4 output.avi    // w/h 视频宽/高</span><br></pre></td></tr></table></figure><h4 id="加水印"><a href="#加水印" class="headerlink" title="加水印"></a>加水印</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -i logo.png -filter_complex <span class="string">&quot;overlay=10:5&quot;</span> out.mp4    // 左上角 距离 左边距 10  上边距 5</span><br></pre></td></tr></table></figure><blockquote><p>overlay参数:<br>左上角为 overlay&#x3D;10:5  &#x2F;&#x2F; 左边 10  上边 5<br>右上角为 overlay&#x3D;main_w-overlay_w-10:5   &#x2F;&#x2F; 右边 10  上边 5<br>右下角为 overlay&#x3D;main_w-overlay_w-10:main_h-overlay_h-5    &#x2F;&#x2F; 右边 10  下边 5<br>左下角为 overlay&#x3D;10: main_h-overlay_h-5  &#x2F;&#x2F; 左边 10  上边 5</p></blockquote><hr><h3 id="常用参数说明"><a href="#常用参数说明" class="headerlink" title="常用参数说明"></a>常用参数说明</h3><h4 id="主要参数："><a href="#主要参数：" class="headerlink" title="主要参数："></a>主要参数：</h4><ul><li><strong>-i</strong> 设定输入流</li><li><strong>-f</strong> 设定输出格式</li><li><strong>-ss</strong> 开始时间</li><li><strong>-t</strong> 持续时间</li><li><strong>-y</strong>  覆盖输出文件</li></ul><h4 id="视频参数："><a href="#视频参数：" class="headerlink" title="视频参数："></a>视频参数：</h4><ul><li><strong>-aspect</strong> 设定画面的比例</li><li><strong>-b</strong> 设定视频流量，默认为200Kbit&#x2F;s</li><li><strong>-bitexact</strong> 使用标准比特率</li><li><strong>-r</strong> 设定帧速率，默认为25</li><li><strong>-s</strong> 设定画面的宽与高</li><li><strong>-title</strong> 设置标题</li><li><strong>-vn</strong> 不处理视频</li><li><strong>-vcodec</strong> 设定视频编解码器，未设定时则使用与输入流相同的编解码器</li><li><strong>-vframes</strong> 设置转换多少帧(frame)的视频</li><li><strong>-qscale</strong>  视频质量，取值0.01-255，约小质量越好 </li><li><strong>-qmin</strong> 设定最小质量，与-qmax（设定最大质量）共用，比如-qmin 10 -qmax 31 </li><li><strong>-sameq</strong> 使用和源同样的质量</li></ul><h4 id="音频参数："><a href="#音频参数：" class="headerlink" title="音频参数："></a>音频参数：</h4><ul><li><strong>-ar</strong> 设定采样率</li><li><strong>-ac</strong> 设定声音的Channel数</li><li><strong>-acodec</strong> 设定声音编解码器，未设定时则使用与输入流相同的编解码器</li><li><strong>-ab</strong> 设定声音比特率</li><li><strong>-an</strong> 不处理音频</li><li><strong>-vol</strong> 设定音量&lt;百分比&gt;，200即原来的2倍</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;h4 id=&quot;分离视频音频流&quot;&gt;&lt;a href=&quot;#分离视频音频流&quot; class=&quot;headerlink&quot; title=&quot;分离视
      
    
    </summary>
    
      <category term="FFmpeg" scheme="http://hezhubo.github.io/categories/FFmpeg/"/>
    
    
      <category term="音视频" scheme="http://hezhubo.github.io/tags/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
      <category term="FFmpeg" scheme="http://hezhubo.github.io/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>解决ADB 5037端口 被外部程序占用问题</title>
    <link href="http://hezhubo.github.io/2016/07/05/android-adb-prot-occupied/"/>
    <id>http://hezhubo.github.io/2016/07/05/android-adb-prot-occupied/</id>
    <published>2016-07-04T16:44:52.000Z</published>
    <updated>2022-06-01T06:59:01.411Z</updated>
    
    <content type="html"><![CDATA[<p><strong>windows环境下：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr &quot;5037&quot;</span><br></pre></td></tr></table></figure><blockquote><p>结果：<br> TCP    127.0.0.1:5037         0.0.0.0:0              LISTENING       <strong>1408</strong><br> …</p></blockquote><p>查看哪个进程占用了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist | findstr &quot;1408&quot;</span><br></pre></td></tr></table></figure><blockquote><p>结果：<br>SogouPhoneService.exe         1408 Console                    1      8,836 K</p></blockquote><p>原来是SogouPhoneService进程占了adb的端口</p><p>用命令或打开任务管理器终止掉该进程就可以了。</p><p>再执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure><p>OK!!!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;windows环境下：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;
      
    
    </summary>
    
      <category term="Android" scheme="http://hezhubo.github.io/categories/Android/"/>
    
    
      <category term="android" scheme="http://hezhubo.github.io/tags/android/"/>
    
      <category term="adb" scheme="http://hezhubo.github.io/tags/adb/"/>
    
  </entry>
  
</feed>
